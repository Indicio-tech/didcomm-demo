{"version":3,"file":"src_lib_worker_ts.bundle.js","mappings":"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CA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,IAAI;WACJ;WACA;WACA,IAAI;WACJ;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,CAAC;WACD;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,EAAE;WACF;WACA,sGAAsG;WACtG;WACA;WACA;WACA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA,EAAE;WACF;WACA;;;;;WChEA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC3BA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,EAAE;WACF;;;;;WCRA;WACA;WACA;WACA;WACA;;;;;WCJA;WACA;WACA;WACA;WACA;;;;;WCJA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,EAAE;WACF;WACA;;;;;WCVA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WCVA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WClBA;;WAEA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,aAAa;WACb;WACA;WACA;WACA;;WAEA;WACA;WACA;;WAEA;;WAEA;;;;;WCpCA;WACA;WACA;WACA;;;;;UEHA;UACA","sources":["webpack://didcomm-demo/./src/lib/didcomm.ts","webpack://didcomm-demo/./src/lib/eventbus.ts","webpack://didcomm-demo/./src/lib/logger.ts","webpack://didcomm-demo/./src/lib/peer2.ts","webpack://didcomm-demo/./src/lib/worker.ts","webpack://didcomm-demo/webpack/bootstrap","webpack://didcomm-demo/webpack/runtime/async module","webpack://didcomm-demo/webpack/runtime/chunk loaded","webpack://didcomm-demo/webpack/runtime/compat get default export","webpack://didcomm-demo/webpack/runtime/define property getters","webpack://didcomm-demo/webpack/runtime/ensure chunk","webpack://didcomm-demo/webpack/runtime/get javascript chunk filename","webpack://didcomm-demo/webpack/runtime/get mini-css chunk filename","webpack://didcomm-demo/webpack/runtime/global","webpack://didcomm-demo/webpack/runtime/harmony module decorator","webpack://didcomm-demo/webpack/runtime/hasOwnProperty shorthand","webpack://didcomm-demo/webpack/runtime/make namespace object","webpack://didcomm-demo/webpack/runtime/wasm loading","webpack://didcomm-demo/webpack/runtime/publicPath","webpack://didcomm-demo/webpack/runtime/importScripts chunk loading","webpack://didcomm-demo/webpack/runtime/startup chunk dependencies","webpack://didcomm-demo/webpack/before-startup","webpack://didcomm-demo/webpack/startup","webpack://didcomm-demo/webpack/after-startup"],"sourcesContent":["import {\n  ed25519,\n  edwardsToMontgomeryPub,\n  edwardsToMontgomeryPriv,\n} from \"@noble/curves/ed25519\"\nimport { DIDResolver, DIDDoc, SecretsResolver, Secret, Message, UnpackMetadata, PackEncryptedMetadata, MessagingServiceMetadata, IMessage } from \"didcomm\"\nimport DIDPeer from \"./peer2\"\nimport {v4 as uuidv4} from \"uuid\"\nimport logger from \"./logger\"\n\nfunction x25519ToSecret(\n  did: string,\n  x25519KeyPriv: Uint8Array,\n  x25519Key: Uint8Array\n): Secret {\n  const encIdent = DIDPeer.keyToIdent(x25519Key, \"x25519-pub\")\n  const secretEnc: Secret = {\n    id: `${did}#${encIdent}`,\n    type: \"X25519KeyAgreementKey2020\",\n    privateKeyMultibase: DIDPeer.keyToMultibase(x25519KeyPriv, \"x25519-priv\")\n  }\n  return secretEnc\n}\n\nfunction ed25519ToSecret(\n  did: string,\n  ed25519KeyPriv: Uint8Array,\n  ed25519Key: Uint8Array\n): Secret {\n  const verIdent = DIDPeer.keyToIdent(ed25519Key, \"ed25519-pub\")\n  const secretVer: Secret = {\n    id: `${did}#${verIdent}`,\n    type: \"Ed25519VerificationKey2020\",\n    privateKeyMultibase: DIDPeer.keyToMultibase(ed25519KeyPriv, \"ed25519-priv\")\n  }\n  return secretVer\n}\n\nexport function generateDidForMediator() {\n  const key = ed25519.utils.randomPrivateKey()\n  const enckeyPriv = edwardsToMontgomeryPriv(key)\n  const verkey = ed25519.getPublicKey(key)\n  const enckey = edwardsToMontgomeryPub(verkey)\n  const service = {\n    type: \"DIDCommMessaging\",\n    serviceEndpoint: \"\",\n    accept: [\"didcomm/v2\"],\n  }\n  const did = DIDPeer.generate([verkey], [enckey], service)\n\n  const secretVer = ed25519ToSecret(did, key, verkey)\n  const secretEnc = x25519ToSecret(did, enckeyPriv, enckey)\n  return { did, secrets: [secretVer, secretEnc] }\n}\n\nexport function generateDid(routingDid: string) {\n  const key = ed25519.utils.randomPrivateKey()\n  const enckeyPriv = edwardsToMontgomeryPriv(key)\n  const verkey = ed25519.getPublicKey(key)\n  const enckey = edwardsToMontgomeryPub(verkey)\n  const service = {\n    type: \"DIDCommMessaging\",\n    serviceEndpoint: {\n      uri: routingDid,\n      accept: [\"didcomm/v2\"],\n    },\n  }\n  const did = DIDPeer.generate([verkey], [enckey], service)\n\n  const secretVer = ed25519ToSecret(did, key, verkey)\n  const secretEnc = x25519ToSecret(did, enckeyPriv, enckey)\n  return { did, secrets: [secretVer, secretEnc] }\n}\n\nexport class DIDPeerResolver implements DIDResolver {\n  async resolve(did: string): Promise<DIDDoc | null> {\n    const raw_doc = DIDPeer.resolve(did)\n    return {\n      id: raw_doc.id,\n      verificationMethod: raw_doc.verificationMethod,\n      authentication: raw_doc.authentication,\n      keyAgreement: raw_doc.keyAgreement,\n      service: raw_doc.service,\n    }\n  }\n}\n\nexport interface SecretsManager extends SecretsResolver {\n  store_secret: (secret: Secret) => void\n}\n\nexport class LocalSecretsResolver implements SecretsManager {\n  private readonly storageKey = \"secretsResolver\"\n\n  constructor() {\n    // Initialize local storage if it hasn't been done before\n    if (!localStorage.getItem(this.storageKey)) {\n      localStorage.setItem(this.storageKey, JSON.stringify({}))\n    }\n  }\n\n  private static createError(message: string, name: string): Error {\n    const e = new Error(message)\n    e.name = name\n    return e\n  }\n\n  async get_secret(secret_id: string): Promise<Secret | null> {\n    try {\n      const secrets = JSON.parse(localStorage.getItem(this.storageKey) || \"{}\")\n      return secrets[secret_id] || null\n    } catch (error) {\n      throw LocalSecretsResolver.createError(\n        \"Unable to perform IO operation\",\n        \"DIDCommIoError\"\n      )\n    }\n  }\n\n  async find_secrets(secret_ids: Array<string>): Promise<Array<string>> {\n    try {\n      const secrets = JSON.parse(localStorage.getItem(this.storageKey) || \"{}\")\n      return secret_ids.map(id => secrets[id]).filter(secret => !!secret) // Filter out undefined or null values\n    } catch (error) {\n      throw LocalSecretsResolver.createError(\n        \"Unable to perform IO operation\",\n        \"DIDCommIoError\"\n      )\n    }\n  }\n\n  // Helper method to store a secret in localStorage\n  store_secret(secret: Secret): void {\n    try {\n      const secrets = JSON.parse(localStorage.getItem(this.storageKey) || \"{}\")\n      secrets[secret.id] = secret\n      localStorage.setItem(this.storageKey, JSON.stringify(secrets))\n    } catch (error) {\n      throw LocalSecretsResolver.createError(\n        \"Unable to perform IO operation\",\n        \"DIDCommIoError\"\n      )\n    }\n  }\n}\n\nexport class EphemeralSecretsResolver implements SecretsManager {\n  private secrets: Record<string, Secret> = {};\n\n  private static createError(message: string, name: string): Error {\n    const e = new Error(message);\n    e.name = name;\n    return e;\n  }\n\n  async get_secret(secret_id: string): Promise<Secret | null> {\n    try {\n      return this.secrets[secret_id] || null;\n    } catch (error) {\n      throw EphemeralSecretsResolver.createError(\n        \"Unable to fetch secret from memory\",\n        \"DIDCommMemoryError\"\n      );\n    }\n  }\n\n  async find_secrets(secret_ids: Array<string>): Promise<Array<string>> {\n    try {\n      return secret_ids.map(id => this.secrets[id]).filter(secret => !!secret).map(secret => secret.id); // Filter out undefined or null values\n    } catch (error) {\n      throw EphemeralSecretsResolver.createError(\n        \"Unable to fetch secrets from memory\",\n        \"DIDCommMemoryError\"\n      );\n    }\n  }\n\n  // Helper method to store a secret in memory\n  store_secret(secret: Secret): void {\n    try {\n      this.secrets[secret.id] = secret;\n    } catch (error) {\n      throw EphemeralSecretsResolver.createError(\n        \"Unable to store secret in memory\",\n        \"DIDCommMemoryError\"\n      );\n    }\n  }\n}\n\nexport interface DIDCommMessage {\n  type: string\n  body?: any\n  [key: string]: any\n}\n\nexport class DIDComm {\n  private readonly resolver: DIDPeerResolver\n  private readonly secretsResolver: SecretsManager\n\n  constructor() {\n    this.resolver = new DIDPeerResolver()\n    this.secretsResolver = new EphemeralSecretsResolver()\n  }\n\n  async generateDidForMediator(): Promise<string> {\n    const { did, secrets } = generateDidForMediator()\n    secrets.forEach(secret => this.secretsResolver.store_secret(secret))\n    return did\n  }\n\n  async generateDid(routingDid: string): Promise<string> {\n    const { did, secrets } = generateDid(routingDid)\n    secrets.forEach(secret => this.secretsResolver.store_secret(secret))\n    return did\n  }\n\n  async resolve(did: string): Promise<DIDDoc | null> {\n    return await this.resolver.resolve(did)\n  }\n\n  async resolveDIDCommServices(did: string): Promise<any> {\n    const doc = await this.resolve(did)\n    if (!doc) {\n      throw new Error(\"Unable to resolve DID\")\n    }\n    if (!doc.service) {\n      throw new Error(\"No service found\")\n    }\n    \n    const services = doc.service\n      .filter(s => s.type === \"DIDCommMessaging\")\n      .filter(s => s.serviceEndpoint.accept.includes(\"didcomm/v2\"))\n    return services\n  }\n\n  /**\n   * Obtain the first websocket endpoint for a given DID.\n   *\n   * @param {string} did The DID to obtain the websocket endpoint for\n   */\n  async wsEndpoint(did: string): Promise<MessagingServiceMetadata> {\n    const services = await this.resolveDIDCommServices(did)\n    \n    const service = services\n      .filter((s: any) => s.serviceEndpoint.uri.startsWith(\"ws\"))[0]\n    return {\n      id: service.id,\n      service_endpoint: service.serviceEndpoint.uri,\n    }\n  }\n\n  /**\n   * Obtain the first http endpoint for a given DID.\n   *\n   * @param {string} did The DID to obtain the websocket endpoint for\n   */\n  async httpEndpoint(did: string): Promise<MessagingServiceMetadata> {\n    const services = await this.resolveDIDCommServices(did)\n    const service = services\n      .filter((s: any) => s.serviceEndpoint.uri.startsWith(\"http\"))[0]\n    return {\n      id: service.id,\n      service_endpoint: service.serviceEndpoint.uri,\n    }\n  }\n\n  async prepareMessage(to: string, from: string, message: DIDCommMessage): Promise<[IMessage, string, PackEncryptedMetadata]> {\n    const msg = new Message({\n      id: uuidv4(),\n      typ: \"application/didcomm-plain+json\",\n      from: from,\n      to: [to],\n      body: message.body || {},\n      created_time: Date.now(),\n      ...message,\n    })\n    const [packed, meta] = await msg.pack_encrypted(\n      to, from, null, this.resolver, this.secretsResolver, {forward: true}\n    )\n    if (!meta.messaging_service) {\n      meta.messaging_service = await this.httpEndpoint(to)\n    }\n    return [msg.as_value(), packed, meta]\n  }\n\n  async unpackMessage(message: string): Promise<[Message, UnpackMetadata]> {\n    return await Message.unpack(\n      message, this.resolver, this.secretsResolver, {}\n    )\n  }\n\n  async sendMessageAndExpectReply(to: string, from: string, message: DIDCommMessage): Promise<[Message, UnpackMetadata]> {\n    const [plaintext, packed, meta]= await this.prepareMessage(to, from, message)\n    logger.sentMessage({to, from, message: plaintext})\n    if (!meta.messaging_service) {\n      throw new Error(\"No messaging service found\")\n    }\n\n    try {\n      const response = await fetch(meta.messaging_service.service_endpoint, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/didcomm-encrypted+json\"\n        },\n        body: packed,\n      })\n\n      if (!response.ok) {\n        const text = await response.text()\n        throw new Error(`Error sending message: ${text}`)\n      }\n      logger.log(\"Message sent successfully.\")\n\n      const packedResponse = await response.text()\n      const unpacked = await this.unpackMessage(packedResponse)\n\n      logger.recvMessage({to, from, message: unpacked[0].as_value()})\n      return unpacked\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  async sendMessage(to: string, from: string, message: DIDCommMessage) {\n    const [plaintext, packed, meta]= await this.prepareMessage(to, from, message)\n    logger.sentMessage({to, from, message: plaintext})\n    if (!meta.messaging_service) {\n      throw new Error(\"No messaging service found\")\n    }\n\n    try {\n      const response = await fetch(meta.messaging_service.service_endpoint, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/didcomm-encrypted+json\"\n        },\n        body: packed,\n      })\n\n      if (!response.ok) {\n        const text = await response.text()\n        throw new Error(`Error sending message: ${text}`)\n      }\n      const text = await response.text()\n      console.log(\"Response:\", text)\n      logger.log(\"Message sent successfully.\")\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  async receiveMessage(message: string): Promise<[Message, UnpackMetadata]> {\n      const unpacked = await Message.unpack(\n        message, this.resolver, this.secretsResolver, {}\n      )\n      const plaintext = unpacked[0].as_value()\n      logger.recvMessage({to: plaintext.to[0], from: plaintext.from, message: plaintext})\n      return unpacked\n  }\n}\n","type Callback = (...args: any[]) => Promise<void> | void\n\ninterface PatternListeners {\n  pattern: RegExp;\n  listeners: Callback[];\n}\n\nexport class EventBus {\n  private listeners: PatternListeners[] = [];\n  private static instance: EventBus;\n\n  private constructor() {}\n\n  static getInstance(): EventBus {\n    if (!EventBus.instance) {\n      EventBus.instance = new EventBus();\n    }\n    return EventBus.instance;\n  }\n\n  on(pattern: RegExp | string, listener: Callback): void {\n    if (typeof pattern === \"string\") {\n      pattern = new RegExp(pattern);\n    }\n    let found = false;\n    for (const entry of this.listeners) {\n      if (entry.pattern.toString() === pattern.toString()) {\n        entry.listeners.push(listener);\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      this.listeners.push({ pattern: pattern, listeners: [listener] });\n    }\n  }\n\n  off(pattern: RegExp, listener: Callback): void {\n    this.listeners = this.listeners.filter(entry => {\n      if (entry.pattern.toString() === pattern.toString()) {\n        entry.listeners = entry.listeners.filter(l => l !== listener);\n        return entry.listeners.length > 0;\n      }\n      return true;\n    });\n  }\n\n  async emit(event: string, ...args: any[]): Promise<void> {\n    for (const entry of this.listeners) {\n      if (entry.pattern.test(event)) {\n        for (const listener of entry.listeners) {\n          const result = listener(...args);\n          if (result instanceof Promise) {\n            await result\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default EventBus.getInstance();\n","import EventBus from './eventbus'\n\nexport enum LogTopic {\n  LOG = \"log\",\n  LOG_MESSAGE = \"log.message\",\n  LOG_MESSAGE_CONTACT = \"log.message.contact\",\n}\n\nexport interface Record {\n  message: string\n  timestamp: Date\n  topic: string\n}\n\nexport interface MessageRecord {\n  to: string\n  from: string\n  message: object\n}\n\nexport class LoggerService {\n  private records: Record[] = []\n\n  log(...messages: string[]) {\n    console.log(...messages)\n    const record = {\n      message: messages.join(\" \"),\n      timestamp: new Date(),\n      topic: LogTopic.LOG\n    }\n    this.records.push(record)\n    EventBus.emit(LogTopic.LOG, record)\n  }\n\n  sentMessage(message: MessageRecord) {\n    const record = {\n      message: \"Sent: \" + JSON.stringify(message.message, null, 2),\n      timestamp: new Date(),\n      topic: LogTopic.LOG_MESSAGE,\n    }\n    this.records.push(record)\n    EventBus.emit(LogTopic.LOG_MESSAGE_CONTACT + `.${message.to}`, record)\n  }\n\n  recvMessage(message: MessageRecord) {\n    const record = {\n      message: \"Received: \" + JSON.stringify(message.message, null, 2),\n      timestamp: new Date(),\n      topic: LogTopic.LOG_MESSAGE,\n    }\n    this.records.push(record)\n    EventBus.emit(LogTopic.LOG_MESSAGE_CONTACT + `.${message.from}`, record)\n  }\n\n  subscribe(topic: LogTopic, callback: (record: Record) => Promise<void>) {\n    EventBus.on(new RegExp(topic), callback)\n  }\n\n  unsubscribe(topic: LogTopic, callback: (record: Record) => Promise<void>) {\n    EventBus.off(new RegExp(topic), callback)\n  }\n\n  subscribeContact(contact: string, callback: (record: Record) => Promise<void>) {\n    EventBus.on(new RegExp(LogTopic.LOG_MESSAGE_CONTACT + `.${contact}`), callback)\n  }\n\n  unsubscribeContact(contact: string, callback: (record: Record) => Promise<void>) {\n    EventBus.off(new RegExp(LogTopic.LOG_MESSAGE_CONTACT + `.${contact}`), callback)\n  }\n}\n\nexport default new LoggerService()\n","import * as multibase from \"multibase\"\nimport * as multicodec from \"multicodec\"\n\n// Common string abbreviation mappings\nconst commonStringAbbreviations: Record<string, string> = {\n  type: \"t\",\n  DIDCommMessaging: \"dm\",\n  serviceEndpoint: \"s\",\n  routingKeys: \"r\",\n  accept: \"a\",\n}\n\nconst reverseCommonStringAbbreviations: Record<string, string> = Object.entries(\n  commonStringAbbreviations\n).reduce((acc, [key, value]) => ({ ...acc, [value]: key }), {})\n\n// Purpose code mappings\nconst purposeCodeList: Record<string, string> = {\n  Assertion: \"A\",\n  Encryption: \"E\",\n  Verification: \"V\",\n  \"Capability Invocation\": \"I\",\n  \"Capability Delegation\": \"D\",\n  Service: \"S\",\n}\n\nexport default class DIDPeer {\n  static keyToMultibase(key: Uint8Array, prefix: multicodec.CodecName): string {\n    const buffer = multibase\n      .encode(\"base58btc\", multicodec.addPrefix(prefix, key))\n    return String.fromCharCode(...buffer)\n  }\n\n  static base64UrlEncode(input: string): string {\n    let base64 = btoa(input)\n    return base64.replace(\"+\", \"-\").replace(\"/\", \"_\").replace(/=+$/, \"\") // remove trailing '=' characters\n  }\n\n  static base64UrlDecode(input: string): string {\n    // Replace URL-safe characters back to Base64 characters\n    let base64 = input.replace(\"-\", \"+\").replace(\"_\", \"/\")\n\n    // Add padding if necessary\n    switch (base64.length % 4) {\n      case 2:\n        base64 += \"==\"\n        break // 2 padding chars\n      case 3:\n        base64 += \"=\"\n        break // 1 padding char\n    }\n\n    return atob(base64)\n  }\n\n  // Determine ident for key\n  static keyToIdent(key: Uint8Array, prefix: multicodec.CodecName): string {\n    const encoded = DIDPeer.keyToMultibase(key, prefix)\n    return encoded.toString().slice(1, 9)\n  }\n\n  // Generate a DID\n  static generate(\n    signingKeys: Uint8Array[],\n    encryptionKeys: Uint8Array[],\n    serviceBlock: object\n  ): string {\n    const didPrefix = \"did:peer:2\"\n\n    // Encode keys\n    const encodedSigningKeys = signingKeys.map(key => {\n      const encoded = DIDPeer.keyToMultibase(key, \"ed25519-pub\")\n      return \".\" + purposeCodeList[\"Verification\"] + encoded\n    })\n\n    const encodedEncryptionKeys = encryptionKeys.map(key => {\n      const encoded = DIDPeer.keyToMultibase(key, \"x25519-pub\")\n      return \".\" + purposeCodeList[\"Encryption\"] + encoded.toString()\n    })\n\n    // Encode service block\n    let abbreviatedService = JSON.stringify(DIDPeer.abbreviateCommonStrings(serviceBlock))\n    abbreviatedService = abbreviatedService.replace(/\\s+/g, \"\")\n    const encodedService = DIDPeer.base64UrlEncode(abbreviatedService)\n    const finalService = \".\" + purposeCodeList[\"Service\"] + encodedService\n\n    return (\n      didPrefix +\n      encodedSigningKeys.join(\"\") +\n      encodedEncryptionKeys.join(\"\") +\n      finalService\n    )\n  }\n\n  static transformOldServiceStyleToNew(service: any): any {\n    if (typeof service.serviceEndpoint === \"string\") {\n      const endpoint = service.serviceEndpoint\n      service.serviceEndpoint = {\n        uri: endpoint,\n        routingKeys: service.routingKeys || [],\n        accept: service.accept || [\"didcomm/v2\"],\n      }\n      delete service.routingKeys\n      delete service.accept\n    }\n    return service\n  }\n\n  static expandCommonStringAbbreviations(input: any): any {\n    const expanded = Object.fromEntries(\n      Object.entries(input).map(([key, value]) => {\n        const expandedKey = reverseCommonStringAbbreviations[key] || key\n        const expandedValue = typeof value === 'string'\n          ? (reverseCommonStringAbbreviations[value] || value)\n          : value\n        return [expandedKey, expandedValue]\n      }))\n    return expanded\n  }\n\n  static abbreviateCommonStrings(input: any): any {\n    const abbreviated = Object.fromEntries(\n      Object.entries(input).map(([key, value]) => {\n        const abbreviatedKey = commonStringAbbreviations[key] || key\n        const abbreviatedValue = typeof value === 'string'\n          ? (commonStringAbbreviations[value] || value)\n          : value\n        return [abbreviatedKey, abbreviatedValue]\n      }))\n    return abbreviated\n  }\n\n  // Resolve a DID into a DID Document\n  static resolve(did: string) {\n    if (!did.startsWith(\"did:peer:2\")) {\n      throw new Error(\"Invalid did:peer:2\")\n    }\n\n    const [, ...elements] = did.split(\".\")\n\n    const doc: any = {\n      \"@context\": \"https://www.w3.org/ns/did/v1\",\n      id: did,\n    }\n\n    elements.forEach(element => {\n      const purposeCode = element.charAt(0)\n      const encodedValue = element.slice(1)\n\n      switch (purposeCode) {\n        case purposeCodeList[\"Verification\"]: {\n          const decodedSigningKey = multicodec.rmPrefix(\n            multibase.decode(encodedValue)\n          )\n          if (!doc.authentication) {\n            doc.authentication = []\n          }\n          if (!doc.verificationMethod) {\n            doc.verificationMethod = []\n          }\n          let ident = `${did}#${DIDPeer.keyToIdent(decodedSigningKey, \"ed25519-pub\")}`\n          doc.verificationMethod.push({\n            id: ident,\n            controller: did,\n            type: \"Ed25519VerificationKey2020\",\n            publicKeyMultibase: DIDPeer.keyToMultibase(\n              decodedSigningKey,\n              \"ed25519-pub\"\n            ),\n          })\n          doc.authentication.push(ident)\n          break\n        }\n\n        case purposeCodeList[\"Encryption\"]: {\n          const decodedEncryptionKey = multicodec.rmPrefix(\n            multibase.decode(encodedValue)\n          )\n          if (!doc.keyAgreement) {\n            doc.keyAgreement = []\n          }\n          if (!doc.verificationMethod) {\n            doc.verificationMethod = []\n          }\n          let ident = `${did}#${DIDPeer.keyToIdent(\n            decodedEncryptionKey,\n            \"x25519-pub\"\n          )}`\n          doc.verificationMethod.push({\n            id: ident,\n            controller: did,\n            type: \"X25519KeyAgreementKey2020\",\n            publicKeyMultibase: DIDPeer.keyToMultibase(\n              decodedEncryptionKey,\n              \"x25519-pub\"\n            ),\n          })\n          doc.keyAgreement.push(ident)\n          break\n        }\n\n        case purposeCodeList[\"Service\"]: {\n          const decodedService = DIDPeer.base64UrlDecode(encodedValue);\n          let services = JSON.parse(decodedService)\n          if (!Array.isArray(services)) {\n            services = [services]\n          }\n          services = services\n            .map(DIDPeer.expandCommonStringAbbreviations)\n            .map((service: any) => {\n              // TODO This is a bandaid! Mediator should include id in services.\n              if (!(\"id\" in service)) {\n                service.id = \"#service\"\n              }\n              return service\n            })\n            .map(DIDPeer.transformOldServiceStyleToNew)\n\n          doc.service = services;\n          break;\n        }\n\n        default:\n          // Other purpose codes can be handled here\n          break\n      }\n    })\n    return doc\n  }\n}\n","import {DIDComm, DIDCommMessage} from './didcomm'\nimport {IMessage} from \"didcomm\"\nimport { WorkerCommand, WorkerMessage } from './workerTypes'\nimport logger, { LogTopic, Record } from './logger'\n\nconst ctx: Worker = self as any;\n\nclass DIDCommWorker {\n  private didcomm: DIDComm\n  private didForMediator: string\n  private did: string\n  private ws: WebSocket\n\n  onLog(record: Record) {\n    this.postMessage({type: \"log\", payload: record})\n  }\n\n  init() {\n    logger.subscribe(LogTopic.LOG, this.onLog.bind(this))\n    this.didcomm = new DIDComm()\n    this.postMessage({type: \"init\", payload: {}})\n    logger.log(\"Worker initialized.\")\n  }\n\n  async establishMediation({mediatorDid}: {mediatorDid: string}) {\n    logger.log(\"Establishing mediation with mediator: \", mediatorDid)\n    this.didForMediator = await this.didcomm.generateDidForMediator()\n    {\n      const [msg, meta] = await this.didcomm.sendMessageAndExpectReply(\n        mediatorDid,\n        this.didForMediator,\n        {\n          type: \"https://didcomm.org/coordinate-mediation/3.0/mediate-request\"\n        }\n      )\n      const reply = msg.as_value()\n      if (reply.type !== 'https://didcomm.org/coordinate-mediation/3.0/mediate-grant') {\n        console.error(\"Unexpected reply: \", reply)\n        throw new Error(\"Unexpected reply\")\n      }\n      const routingDid = reply.body.routing_did[0]\n      this.did = await this.didcomm.generateDid(routingDid)\n      this.postMessage({type: \"didGenerated\", payload: this.did})\n    }\n\n    const [msg, meta] = await this.didcomm.sendMessageAndExpectReply(\n      mediatorDid,\n      this.didForMediator,\n      {\n        type: \"https://didcomm.org/coordinate-mediation/3.0/recipient-update\",\n        body: {\n          updates: [\n            {\n              recipient_did: this.did,\n              action: \"add\",\n            }\n          ]\n        }\n      }\n    )\n\n    const reply = msg.as_value()\n    if (reply.type !== 'https://didcomm.org/coordinate-mediation/3.0/recipient-update-response') {\n      console.error(\"Unexpected reply: \", reply)\n      throw new Error(\"Unexpected reply\")\n    }\n\n    if (reply.body.updated[0]?.recipient_did !== this.did) {\n      throw new Error(\"Unexpected did in recipient update response\")\n    }\n\n    if (reply.body.updated[0]?.action !== \"add\") {\n      throw new Error(\"Unexpected action in recipient update response\")\n    }\n\n    if (reply.body.updated[0]?.result !== \"success\") {\n      throw new Error(\"Unexpected status in recipient update response\")\n    }\n  }\n\n  async pickupStatus({mediatorDid}: {mediatorDid: string}) {\n    const [msg, meta] = await this.didcomm.sendMessageAndExpectReply(\n      mediatorDid, this.didForMediator, {\n        type: \"https://didcomm.org/messagepickup/3.0/status-request\",\n        body: { }\n      }\n    )\n    const status = msg.as_value()\n    if (status.type !== \"https://didcomm.org/messagepickup/3.0/status\") {\n      throw new Error(\"Unexpected reply: \" + status.type)\n    }\n    await this.handleMessage(status)\n  }\n\n  async connect({mediatorDid}: {mediatorDid: string}) {\n    logger.log(\"Connecting to mediator: \", mediatorDid)\n    const endpoint = await this.didcomm.wsEndpoint(mediatorDid)\n    logger.log(\"Discovered WS endpoint: \", endpoint.service_endpoint)\n    this.ws = new WebSocket(endpoint.service_endpoint)\n\n    this.ws.onmessage = async (event: MessageEvent<Blob>) => {\n      await this.handlePackedMessage(await event.data.text())\n    }\n    this.ws.onopen = async (event) => {\n      console.log(\"ws onopen\", event)\n      const [plaintext, live, meta] = await this.didcomm.prepareMessage(\n        mediatorDid, this.didForMediator, {\n        type: \"https://didcomm.org/messagepickup/3.0/live-delivery-change\",\n        body: {\n          live_delivery: true\n        }\n      })\n      this.ws.send(live)\n      this.postMessage({type: \"connected\", payload: {}})\n    }\n    this.ws.onerror = (event) => {\n      console.log(\"ws onerror\", event)\n      this.postMessage({type: \"error\", payload: {}})\n    }\n    this.ws.onclose = (event) => {\n      console.log(\"ws onclose\", event)\n      this.postMessage({type: \"disconnected\", payload: {}})\n    }\n\n  }\n\n  async handlePackedMessage(packed: string) {\n    const [msg, meta] = await this.didcomm.unpackMessage(packed)\n    const message = msg.as_value()\n    logger.recvMessage({to: message.to[0], from: message.from, message: message})\n    return await this.handleMessage(message)\n  }\n\n  async handleMessage(message: IMessage) {\n    console.log(\"handleMessage: \", message)\n    switch (message.type) {\n      case \"https://didcomm.org/messagepickup/3.0/status\":\n        if (message.body.message_count > 0) {\n          const [msg, meta] = await this.didcomm.sendMessageAndExpectReply(\n            message.from, this.didForMediator, {\n              type: \"https://didcomm.org/messagepickup/3.0/delivery-request\",\n              body: {\n                limit: message.body.message_count,\n              },\n            }\n          )\n          const delivery = msg.as_value()\n          if (delivery.type !== \"https://didcomm.org/messagepickup/3.0/delivery\") {\n            throw new Error(\"Unexpected reply: \" + delivery.type)\n          }\n          await this.handleMessage(delivery)\n        }\n        break\n\n      case \"https://didcomm.org/messagepickup/3.0/delivery\":\n        let received: string[] = []\n        message.attachments.forEach(async (attachement) => {\n          if (\"base64\" in attachement.data) {\n            received.push(attachement.id)\n            this.handlePackedMessage(atob(attachement.data.base64))\n          } else if (\"json\" in attachement.data) {\n            received.push(attachement.id)\n            this.handlePackedMessage(JSON.stringify(attachement.data.json))\n          } else {\n            console.error(\"Unhandled attachment: \", attachement)\n            throw new Error(\"Unhandled attachment\")\n          }\n        })\n        const [msg, meta] = await this.didcomm.sendMessageAndExpectReply(\n          message.from, this.didForMediator, {\n            type: \"https://didcomm.org/messagepickup/3.0/messages-received\",\n            body: {\n              message_id_list: received,\n            },\n          }\n        )\n        const status = msg.as_value()\n        if (status.type !== \"https://didcomm.org/messagepickup/3.0/status\") {\n          throw new Error(\"Unexpected reply: \" + status.type)\n        }\n        await this.handleMessage(status)\n        break\n      default:\n        console.log(\"Unhandled message: \", message)\n        break\n    }\n    this.postMessage({type: \"messageReceived\", payload: message})\n  }\n\n  async disconnect() {\n    this.ws.close()\n    this.postMessage({type: \"disconnected\", payload: {}})\n  }\n\n  async sendMessage({to, message}: {to: string, message: DIDCommMessage}) {\n    await this.didcomm.sendMessage(to, this.did, message)\n  }\n\n  postMessage<T>(message: WorkerMessage<T>) {\n    self.postMessage(message)\n  }\n\n  async route(event: MessageEvent<WorkerCommand<any>>) {\n    const {type, payload} = event.data\n    const method = this[type]\n\n    if (typeof method === 'function') {\n      const result = method.call(this, payload)\n\n      if (result instanceof Promise) {\n        await result\n      }\n    } else {\n      console.error(\"Unknown command type: \", type)\n    }\n  }\n}\n\nconst handler = new DIDCommWorker()\nconsole.log(\"Created worker: \", handler)\nctx.onmessage = async (event: MessageEvent) => {\n  console.log(\"Worker received message: \", event)\n  await handler.route(event)\n}\nhandler.init()\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [\"vendors-node_modules_didcomm_index_js-node_modules_multibase_src_index_js-node_modules_multic-27f6b7\"], () => (__webpack_require__(\"./src/lib/worker.ts\")))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var webpackQueues = typeof Symbol === \"function\" ? Symbol(\"webpack queues\") : \"__webpack_queues__\";\nvar webpackExports = typeof Symbol === \"function\" ? Symbol(\"webpack exports\") : \"__webpack_exports__\";\nvar webpackError = typeof Symbol === \"function\" ? Symbol(\"webpack error\") : \"__webpack_error__\";\nvar resolveQueue = (queue) => {\n\tif(queue && queue.d < 1) {\n\t\tqueue.d = 1;\n\t\tqueue.forEach((fn) => (fn.r--));\n\t\tqueue.forEach((fn) => (fn.r-- ? fn.r++ : fn()));\n\t}\n}\nvar wrapDeps = (deps) => (deps.map((dep) => {\n\tif(dep !== null && typeof dep === \"object\") {\n\t\tif(dep[webpackQueues]) return dep;\n\t\tif(dep.then) {\n\t\t\tvar queue = [];\n\t\t\tqueue.d = 0;\n\t\t\tdep.then((r) => {\n\t\t\t\tobj[webpackExports] = r;\n\t\t\t\tresolveQueue(queue);\n\t\t\t}, (e) => {\n\t\t\t\tobj[webpackError] = e;\n\t\t\t\tresolveQueue(queue);\n\t\t\t});\n\t\t\tvar obj = {};\n\t\t\tobj[webpackQueues] = (fn) => (fn(queue));\n\t\t\treturn obj;\n\t\t}\n\t}\n\tvar ret = {};\n\tret[webpackQueues] = x => {};\n\tret[webpackExports] = dep;\n\treturn ret;\n}));\n__webpack_require__.a = (module, body, hasAwait) => {\n\tvar queue;\n\thasAwait && ((queue = []).d = -1);\n\tvar depQueues = new Set();\n\tvar exports = module.exports;\n\tvar currentDeps;\n\tvar outerResolve;\n\tvar reject;\n\tvar promise = new Promise((resolve, rej) => {\n\t\treject = rej;\n\t\touterResolve = resolve;\n\t});\n\tpromise[webpackExports] = exports;\n\tpromise[webpackQueues] = (fn) => (queue && fn(queue), depQueues.forEach(fn), promise[\"catch\"](x => {}));\n\tmodule.exports = promise;\n\tbody((deps) => {\n\t\tcurrentDeps = wrapDeps(deps);\n\t\tvar fn;\n\t\tvar getResult = () => (currentDeps.map((d) => {\n\t\t\tif(d[webpackError]) throw d[webpackError];\n\t\t\treturn d[webpackExports];\n\t\t}))\n\t\tvar promise = new Promise((resolve) => {\n\t\t\tfn = () => (resolve(getResult));\n\t\t\tfn.r = 0;\n\t\t\tvar fnQueue = (q) => (q !== queue && !depQueues.has(q) && (depQueues.add(q), q && !q.d && (fn.r++, q.push(fn))));\n\t\t\tcurrentDeps.map((dep) => (dep[webpackQueues](fnQueue)));\n\t\t});\n\t\treturn fn.r ? promise : getResult();\n\t}, (err) => ((err ? reject(promise[webpackError] = err) : outerResolve(exports)), resolveQueue(queue)));\n\tqueue && queue.d < 0 && (queue.d = 0);\n};","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".bundle.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.v = (exports, wasmModuleId, wasmModuleHash, importsObj) => {\n\tvar req = fetch(__webpack_require__.p + \"\" + wasmModuleHash + \".module.wasm\");\n\tif (typeof WebAssembly.instantiateStreaming === 'function') {\n\t\treturn WebAssembly.instantiateStreaming(req, importsObj)\n\t\t\t.then((res) => (Object.assign(exports, res.instance.exports)));\n\t}\n\treturn req\n\t\t.then((x) => (x.arrayBuffer()))\n\t\t.then((bytes) => (WebAssembly.instantiate(bytes, importsObj)))\n\t\t.then((res) => (Object.assign(exports, res.instance.exports)));\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t\"src_lib_worker_ts\": 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkdidcomm_demo\"] = self[\"webpackChunkdidcomm_demo\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn __webpack_require__.e(\"vendors-node_modules_didcomm_index_js-node_modules_multibase_src_index_js-node_modules_multic-27f6b7\").then(next);\n};","","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n",""],"names":[],"sourceRoot":""}