{"version":3,"file":"336.bundle.js","mappings":"uBAAIA,EACAC,EACAC,EACAC,ECHAC,ECAAC,E,msDCUJ,SAASC,EACPC,EACAC,EACAC,GAEA,IAAMC,EAAW,IAAQC,WAAWF,EAAW,cAM/C,MAL0B,CACxBG,GAAI,UAAGL,EAAG,YAAIG,GACdG,KAAM,4BACNC,oBAAqB,IAAQC,eAAeP,EAAe,eAG/D,CAEA,SAASQ,EACPT,EACAU,EACAC,GAEA,IAAMC,EAAW,IAAQR,WAAWO,EAAY,eAMhD,MAL0B,CACxBN,GAAI,UAAGL,EAAG,YAAIY,GACdN,KAAM,6BACNC,oBAAqB,IAAQC,eAAeE,EAAgB,gBAGhE,CAEO,SAASG,IACd,IAAMC,EAAM,KAAQC,MAAMC,mBACpBC,GAAa,QAAwBH,GACrCI,EAAS,KAAQC,aAAaL,GAC9BM,GAAS,QAAuBF,GAOhClB,EAAM,IAAQqB,SAAS,CAACH,GAAS,CAACE,GANxB,CACdf,GAAI,WACJC,KAAM,mBACNgB,gBAAiB,2BACjBC,OAAQ,CAAC,gBAMX,MAAO,CAAEvB,IAAG,EAAEwB,QAAS,CAFLf,EAAgBT,EAAKc,EAAKI,GAC1BnB,EAAeC,EAAKiB,EAAYG,IAEpD,CAEO,SAASK,EAAYC,GAC1B,IAAMZ,EAAM,KAAQC,MAAMC,mBACpBC,GAAa,QAAwBH,GACrCI,EAAS,KAAQC,aAAaL,GAC9BM,GAAS,QAAuBF,GAChCS,EAAU,CACdtB,GAAI,WACJC,KAAM,mBACNgB,gBAAiB,CACfM,IAAKF,EACLH,OAAQ,CAAC,gBAGPvB,EAAM,IAAQqB,SAAS,CAACH,GAAS,CAACE,GAASO,GAIjD,MAAO,CAAE3B,IAAG,EAAEwB,QAAS,CAFLf,EAAgBT,EAAKc,EAAKI,GAC1BnB,EAAeC,EAAKiB,EAAYG,IAEpD,CAEA,8BAWA,QAVQ,YAAAS,QAAN,SAAc7B,G,yEAEZ,MAAO,CAAP,EAAO,CACLK,IAFIyB,EAAU,IAAQD,QAAQ7B,IAElBK,GACZ0B,mBAAoBD,EAAQC,mBAC5BC,eAAgBF,EAAQE,eACxBC,aAAcH,EAAQG,aACtBN,QAASG,EAAQH,S,QAGvB,EAXA,GAwEA,GAvDA,WAGE,aAFiB,KAAAO,WAAa,kBAIvBC,aAAaC,QAAQC,KAAKH,aAC7BC,aAAaG,QAAQD,KAAKH,WAAYK,KAAKC,UAAU,CAAC,GAE1D,CAEe,EAAAC,YAAf,SAA2BC,EAAiBC,GAC1C,IAAMC,EAAI,IAAIC,MAAMH,GAEpB,OADAE,EAAED,KAAOA,EACFC,CACT,EAEM,YAAAE,WAAN,SAAiBC,G,mEACf,IAEE,MAAO,CAAP,EADgBR,KAAKS,MAAMb,aAAaC,QAAQC,KAAKH,aAAe,MACrDa,IAAc,K,CAC7B,MAAOE,GACP,MAAMC,EAAqBT,YACzB,iCACA,iB,kBAKA,YAAAU,aAAN,SAAmBC,G,yEACjB,IAEE,OADM,EAAUb,KAAKS,MAAMb,aAAaC,QAAQC,KAAKH,aAAe,MAC7D,CAAP,EAAOkB,EAAWC,KAAI,SAAAhD,GAAM,SAAQA,EAAR,IAAaiD,QAAO,SAAAC,GAAU,QAAEA,CAAF,I,CAC1D,MAAON,GACP,MAAMC,EAAqBT,YACzB,iCACA,iB,kBAMN,YAAAe,aAAA,SAAaD,GACX,IACE,IAAM/B,EAAUe,KAAKS,MAAMb,aAAaC,QAAQC,KAAKH,aAAe,MACpEV,EAAQ+B,EAAOlD,IAAMkD,EACrBpB,aAAaG,QAAQD,KAAKH,WAAYK,KAAKC,UAAUhB,G,CACrD,MAAOyB,GACP,MAAMC,EAAqBT,YACzB,iCACA,iB,CAGN,CACF,CArDA,GAuDA,wBACU,KAAAjB,QAAkC,CAAC,CAyC7C,QAvCiB,EAAAiB,YAAf,SAA2BC,EAAiBC,GAC1C,IAAMC,EAAI,IAAIC,MAAMH,GAEpB,OADAE,EAAED,KAAOA,EACFC,CACT,EAEM,YAAAE,WAAN,SAAiBC,G,mEACf,IACE,MAAO,CAAP,EAAOV,KAAKb,QAAQuB,IAAc,K,CAClC,MAAOE,GACP,MAAMQ,EAAyBhB,YAC7B,qCACA,qB,kBAKA,YAAAU,aAAN,SAAmBC,G,8EACjB,IACE,MAAO,CAAP,EAAOA,EAAWC,KAAI,SAAAhD,GAAM,SAAKmB,QAAQnB,EAAb,IAAkBiD,QAAO,SAAAC,GAAU,QAAEA,CAAF,IAAUF,KAAI,SAAAE,GAAU,OAAAA,EAAOlD,EAAP,I,CACvF,MAAO4C,GACP,MAAMQ,EAAyBhB,YAC7B,sCACA,qB,kBAMN,YAAAe,aAAA,SAAaD,GACX,IACElB,KAAKb,QAAQ+B,EAAOlD,IAAMkD,C,CAC1B,MAAON,GACP,MAAMQ,EAAyBhB,YAC7B,mCACA,qB,CAGN,EACF,EA1CA,IAkDA,aAIE,aACEJ,KAAKqB,SAAW,IAAIC,EACpBtB,KAAKuB,gBAAkB,IAAIH,CAC7B,CAmHF,OAjHQ,YAAA5C,uBAAN,W,kFAGE,OAFM,EAAmBA,IAAjBb,EAAG,MAAS,UACZ6D,SAAQ,SAAAN,GAAU,SAAKK,gBAAgBJ,aAAaD,EAAlC,IACnB,CAAP,EAAOvD,E,QAGH,YAAAyB,YAAN,SAAkBC,G,kFAGhB,OAFM,EAAmBD,EAAYC,GAA7B1B,EAAG,MAAS,UACZ6D,SAAQ,SAAAN,GAAU,SAAKK,gBAAgBJ,aAAaD,EAAlC,IACnB,CAAP,EAAOvD,E,QAGH,YAAA6B,QAAN,SAAc7B,G,0FACL,SAAMqC,KAAKqB,SAAS7B,QAAQ7B,I,OAAnC,MAAO,CAAP,EAAO,U,QAQH,YAAA8D,WAAN,SAAiB9D,G,gGACH,SAAMqC,KAAKR,QAAQ7B,I,OAC/B,KADM+D,EAAM,UAEV,MAAM,IAAIlB,MAAM,yBAElB,IAAKkB,EAAIpC,QACP,MAAM,IAAIkB,MAAM,oBAMlB,MAAO,CAAP,EAHiBkB,EAAIpC,QAClB2B,QAAO,SAAAU,GAAK,MAAW,qBAAXA,EAAE1D,IAAF,IACZgD,QAAO,SAAAU,GAAK,OAAAA,EAAE1C,gBAAgB2C,WAAW,KAA7B,IACC,GAAG3C,iB,QAGf,YAAA4C,eAAN,SAAqBC,EAAYC,EAAc1B,G,0FAUtC,SATK,IAAI,KAAQ,EAAD,CACrBrC,IAAI,SACJgE,IAAK,iCACLD,KAAMA,EACND,GAAI,CAACA,GACLG,KAAM5B,EAAQ4B,MAAQ,CAAC,EACvBC,aAAcC,KAAKC,OAChB/B,IAEYgC,eACfP,EAAIC,EAAM,KAAM/B,KAAKqB,SAAUrB,KAAKuB,gBAAiB,CAACe,SAAS,K,OADjE,MAAO,CAAP,EAAO,U,QAKH,YAAAC,cAAN,SAAoBlC,G,0FACT,SAAM,KAAQmC,OACnBnC,EAASL,KAAKqB,SAAUrB,KAAKuB,gBAAiB,CAAC,I,OADjD,MAAO,CAAP,EAAO,U,QAKL,YAAAkB,0BAAN,SAAgCX,EAAYC,EAAc1B,G,4GAClC,SAAML,KAAK6B,eAAeC,EAAIC,EAAM1B,I,OAC1D,GADM,EAAgB,SAAfqC,EAAM,OAAEC,EAAI,MACTC,kBACR,MAAM,IAAIpC,MAAM,8B,iBAIC,O,sBAAA,GAAMqC,MAAMF,EAAKC,kBAAkBE,iBAAkB,CACpEC,OAAQ,OACRC,QAAS,CACP,eAAgB,sCAElBf,KAAMS,K,cALFO,EAAW,UAQHC,GAAV,MACW,GAAMD,EAASE,Q,OAC5B,MADMA,EAAO,SACP,IAAI3C,MAAM,iCAA0B2C,I,OAGrB,SAAMF,EAASE,Q,OAC/B,OADDC,EAAiB,SAChB,GAAMpD,KAAKuC,cAAca,I,OAAhC,MAAO,CAAP,EAAO,U,yBAEPC,QAAQzC,MAAM,G,+BAIZ,YAAA0C,YAAN,SAAkBxB,EAAYC,EAAc1B,G,0GACpB,SAAML,KAAK6B,eAAeC,EAAIC,EAAM1B,I,OAC1D,GADM,EAAgB,SAAfqC,EAAM,OAAEC,EAAI,MACTC,kBACR,MAAM,IAAIpC,MAAM,8B,iBAIC,O,sBAAA,GAAMqC,MAAMF,EAAKC,kBAAkBE,iBAAkB,CACpEC,OAAQ,OACRC,QAAS,CACP,eAAgB,sCAElBf,KAAMS,K,cALFO,EAAW,UAQHC,GAAV,MACW,GAAMD,EAASE,Q,OAC5B,MADMA,EAAO,SACP,IAAI3C,MAAM,iCAA0B2C,I,4CAG5CE,QAAQzC,MAAM,G,+BAIZ,YAAA2C,eAAN,SAAqBlD,G,0FACV,SAAM,KAAQmC,OACnBnC,EAASL,KAAKqB,SAAUrB,KAAKuB,gBAAiB,CAAC,I,OADjD,MAAO,CAAP,EAAO,U,QAIb,EA1HA,G,+RClMMiC,EAAoD,CACxDvF,KAAM,IACNwF,iBAAkB,KAClBxE,gBAAiB,IACjByE,YAAa,IACbxE,OAAQ,KAGJyE,EAA2DC,OAAOC,QACtEL,GACAM,QAAO,SAACC,EAAK,G,MAACtF,EAAG,KAAEuF,EAAK,KAAM,cAAMD,KAAG,MAAGC,GAAQvF,EAAG,GAAvB,GAA4B,CAAC,G,QAY7D,wBAqKA,QApKS,EAAAN,eAAP,SAAsBM,EAAiBwF,GACrC,OAAO,SACG,YAAa,YAAqBA,EAAQxF,IACjDyF,UACL,EAEO,EAAAC,gBAAP,SAAuBC,GAErB,OADaC,KAAKD,GACJE,QAAQ,IAAK,KAAKA,QAAQ,IAAK,KAAKA,QAAQ,MAAO,GACnE,EAEO,EAAAC,gBAAP,SAAuBH,GAErB,IAAII,EAASJ,EAAME,QAAQ,IAAK,KAAKA,QAAQ,IAAK,KAGlD,OAAQE,EAAOC,OAAS,GACtB,KAAK,EACHD,GAAU,KACV,MACF,KAAK,EACHA,GAAU,IAId,OAAOE,KAAKF,EACd,EAGO,EAAAzG,WAAP,SAAkBU,EAAiBwF,GAEjC,OADgBU,EAAQxG,eAAeM,EAAKwF,GAC7BC,WAAWU,MAAM,EAAG,EACrC,EAGO,EAAA5F,SAAP,SACE6F,EACAC,EACAC,GAEA,IAGMC,EAAqBH,EAAY7D,KAAI,SAAAvC,GAKzC,MAAO,KAJS,SACd,YACA,YAAqB,cAAeA,IAEiByF,UACzD,IAEMe,EAAwBH,EAAe9D,KAAI,SAAAvC,GAK/C,MAAO,KAJS,SACd,YACA,YAAqB,aAAcA,IAEgByF,UACvD,IAGIgB,EAAqBhF,KAAKC,UAAU4E,GAAc,SAACtG,EAAKuF,GAC1D,OAAIR,EAA0B/E,GACrB+E,EAA0B/E,GAE5BuF,CACT,IACAkB,EAAqBA,EAAmBZ,QAAQ,OAAQ,IACxD,IACMa,EAAe,KADER,EAAQR,gBAAgBe,GAG/C,MA9BkB,aAgChBF,EAAmBI,KAAK,IACxBH,EAAsBG,KAAK,IAC3BD,CAEJ,EAGO,EAAA3F,QAAP,SAAe7B,GACb,IAAKA,EAAIiE,WAAW,cAClB,MAAM,IAAIpB,MAAM,sBAGZ,IAAM6E,EAAY1H,EAAI2H,MAAM,KAAd,SAEd5D,EAAW,CACf,WAAY,gCA2Ed,OAxEA2D,EAAS7D,SAAQ,SAAA+D,GACf,IAAMC,EAAcD,EAAQE,OAAO,GAC7BC,EAAeH,EAAQX,MAAM,GAEnC,OAAQY,GACN,IAtGQ,IAuGN,IAAMG,EAAoB,WACxB,SAAiBD,IAEdhE,EAAI/B,iBACP+B,EAAI/B,eAAiB,IAElB+B,EAAIhC,qBACPgC,EAAIhC,mBAAqB,IAE3B,IAAIkG,EAAQ,WAAIjB,EAAQ5G,WAAW4H,EAAmB,gBACtDjE,EAAIhC,mBAAmBmG,KAAK,CAC1B7H,GAAI4H,EACJ3H,KAAM,6BACN6H,mBAAoBnB,EAAQxG,eAC1BwH,EACA,iBAGJjE,EAAI/B,eAAekG,KAAKD,GACxB,MAGF,IA9HM,IA+HJ,IAAMG,EAAuB,WAC3B,SAAiBL,IAEdhE,EAAI9B,eACP8B,EAAI9B,aAAe,IAEhB8B,EAAIhC,qBACPgC,EAAIhC,mBAAqB,IAEvBkG,EAAQ,WAAIjB,EAAQ5G,WACtBgI,EACA,eAEFrE,EAAI9B,aAAaiG,KAAK,CACpB7H,GAAI4H,EACJ3H,KAAM,4BACN+H,gBAAiBrB,EAAQxG,eACvB4H,EACA,gBAGJrE,EAAI9B,aAAaiG,KAAKD,GACtB,MAGF,IApJG,IAqJD,IAAMK,EAAiBtB,EAAQJ,gBAAgBmB,GACzCQ,EAAgBhG,KAAKS,MAAMsF,GAAgB,SAACxH,EAAKuF,GACrD,OAAIL,EAAiClF,GAC5BkF,EAAiClF,GAEnCuF,CACT,IACAtC,EAAIpC,QAAU,CAAC4G,GAQrB,IAEOxE,CACT,EACF,EArKA,E,k8CCtBMyE,EAAcC,KAsLdC,EAAU,IApLhB,wBAkLA,QA5KE,YAAAC,KAAA,WACEtG,KAAKuG,QAAU,IAAI,IACrB,EAEM,YAAAC,mBAAN,SAAyB,G,UAACC,EAAW,c,gHACb,OAAtB,EAAAzG,KAAsB,GAAMA,KAAKuG,QAAQ/H,0B,OAEnB,OAFtB,EAAKkI,eAAiB,SAEA,GAAM1G,KAAKuG,QAAQ9D,0BACrCgE,EACAzG,KAAK0G,eACL,CACEzI,KAAM,kE,OAIV,GARM,EAAc,SAAb,OAAK,KAQO,gEADb,EAAQ,EAAI0I,YACR1I,KAER,MADAoF,QAAQzC,MAAM,qBAAsB,GAC9B,IAAIJ,MAAM,oBAGP,OADLnB,EAAa,EAAM4C,KAAK2E,YAAY,GAC1C,EAAA5G,KAAW,GAAMA,KAAKuG,QAAQnH,YAAYC,I,OAIxB,OAJlB,EAAK1B,IAAM,SACXqC,KAAK6G,YAAY,CAAC5I,KAAM,eAAgB6I,QAAS9G,KAAKrC,MAGpC,GAAMqC,KAAKuG,QAAQ9D,0BACrCgE,EACAzG,KAAK0G,eACL,CACEzI,KAAM,gEACNgE,KAAM,CACJ8E,QAAS,CACP,CACEC,cAAehH,KAAKrC,IACpBsJ,OAAQ,Y,OAQlB,GAjBM,EAAc,SAAbC,EAAG,KAAM,KAiBG,4EADbC,EAAQD,EAAIP,YACR1I,KAER,MADAoF,QAAQzC,MAAM,qBAAsBuG,GAC9B,IAAI3G,MAAM,oBAGlB,IAAyB,QAArB,EAAA2G,EAAMlF,KAAKmF,QAAQ,UAAE,eAAEJ,iBAAkBhH,KAAKrC,IAChD,MAAM,IAAI6C,MAAM,+CAGlB,GAAsC,SAAb,QAArB,EAAA2G,EAAMlF,KAAKmF,QAAQ,UAAE,eAAEH,QACzB,MAAM,IAAIzG,MAAM,kDAGlB,GAAsC,aAAb,QAArB,EAAA2G,EAAMlF,KAAKmF,QAAQ,UAAE,eAAEC,QACzB,MAAM,IAAI7G,MAAM,kD,kBAId,YAAA8G,QAAN,SAAc,G,IAACb,EAAW,c,2GACP,SAAMzG,KAAKuG,QAAQ9E,WAAWgF,I,OAgB1B,OAhBfc,EAAW,SACjBvH,KAAKwH,GAAK,IAAIC,UAAUF,GAExBvH,KAAKwH,GAAGE,UAAY,SAAOC,GAAK,qC,kDAC9B,SAAM3H,KAAK4H,oBAAoBD,EAAME,O,cAArC,S,YAEF7H,KAAKwH,GAAGM,OAAS,SAACH,GAChB,EAAKd,YAAY,CAAC5I,KAAM,YAAa6I,QAASa,GAChD,EACA3H,KAAKwH,GAAGO,QAAU,SAACJ,GACjB,EAAKd,YAAY,CAAC5I,KAAM,QAAS6I,QAASa,GAC5C,EACA3H,KAAKwH,GAAGQ,QAAU,SAACL,GACjB,EAAKd,YAAY,CAAC5I,KAAM,eAAgB6I,QAASa,GACnD,EAEqB,GAAM3H,KAAKuG,QAAQ1E,eACtC4E,EAAazG,KAAK0G,eAAgB,CAClCzI,KAAM,6DACNgE,KAAM,CACJgG,eAAe,M,cAJb,EAAe,SAAdC,EAAI,KAAM,KAOjBlI,KAAKwH,GAAGW,KAAKD,G,YAGT,YAAAE,cAAN,SAAoB/H,G,0HACVA,EAAQpC,M,IACT,2D,IAmBA,6D,0BAlBCoC,EAAQ4B,KAAKoG,cAAgB,EACX,GAAMrI,KAAKuG,QAAQ9D,0BACrCpC,EAAQ0B,KAAM/B,KAAK0G,eAAgB,CACjCzI,KAAM,yDACNgE,KAAM,CACJqG,MAAOjI,EAAQ4B,KAAKoG,eAEtBE,aAAc,SAPhB,M,OAWF,GAVM,EAAc,SAAb,OAAK,KAUU,oDADhBC,EAAW,EAAI7B,YACR1I,KACX,MAAM,IAAIuC,MAAM,qBAAuBgI,EAASvK,MAElD,SAAM+B,KAAKoI,cAAcI,I,OAAzB,S,iBAEF,Y,OAYoB,OAThB,EAAqB,GACzBnI,EAAQoI,YAAYjH,SAAQ,SAAOkH,GAAW,qC,iCACxC,WAAYA,EAAYb,MAC1B,EAAShC,KAAK6C,EAAY1K,IAC1BgC,KAAK4H,oBAAoBlD,KAAKgE,EAAYb,KAAKrD,UAE/CnB,QAAQzC,MAAM,yBAA0B8H,G,aAGxB,GAAM1I,KAAKuG,QAAQ9D,0BACrCpC,EAAQ0B,KAAM/B,KAAK0G,eAAgB,CACjCzI,KAAM,0DACNgE,KAAM,CACJ0G,gBAAiB,GAEnBJ,aAAc,S,OAIlB,GAVM,EAAc,SAAbrB,EAAG,KAAM,KAUI,kDADd,EAASA,EAAIP,YACR1I,KACT,MAAM,IAAIuC,MAAM,qBAAuB,EAAOvC,MAEhD,SAAM+B,KAAKoI,cAAc,I,OACzB,OADA,SACA,M,OAGA,OADA/E,QAAQuF,IAAI,sBAAuBvI,GACnC,M,cAEJL,KAAK6G,YAAY,CAAC5I,KAAM,kBAAmB6I,QAASzG,I,YAGhD,YAAAuH,oBAAN,SAA0BlF,G,oGACJ,SAAM1C,KAAKuG,QAAQhE,cAAcG,I,OAE9C,OAFD,EAAc,SAAbwE,EAAG,KAAM,KACV7G,EAAU6G,EAAIP,WACb,GAAM3G,KAAKoI,cAAc/H,I,OAAhC,MAAO,CAAP,EAAO,U,QAGH,YAAAwI,WAAN,W,0EACE7I,KAAKwH,GAAGsB,QACR9I,KAAK6G,YAAY,CAAC5I,KAAM,eAAgB6I,QAAS,CAAC,I,WAG9C,YAAAxD,YAAN,SAAkB,G,IAACxB,EAAE,KAAEzB,EAAO,U,0FAC5B,SAAML,KAAKuG,QAAQjD,YAAYxB,EAAI9B,KAAKrC,IAAK0C,I,cAA7C,S,YAGF,YAAAwG,YAAA,SAAexG,GACb+F,KAAKS,YAAYxG,EACnB,EAEM,YAAA0I,MAAN,SAAYpB,G,+GACJ,EAAkBA,EAAME,KAAvB5J,EAAI,OAAE6I,EAAO,UAGE,mBAFhB/D,EAAS/C,KAAK/B,IAEhB,OACIoJ,EAAStE,EAAOiG,KAAKhJ,KAAM8G,cAEXmC,QACpB,GAAM5B,GADJ,M,OACF,S,oCAGFhE,QAAQzC,MAAM,yBAA0B3C,G,mCAG9C,EAlLA,IAqLAkI,EAAI+C,iBAAiB,WAAW,SAAOvB,GAAmB,0C,kDACxD,SAAMtB,EAAQ0C,MAAMpB,I,cAApB,S,sCC3LEwB,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CACjDrL,GAAIqL,EACJK,QAAQ,EACRF,QAAS,CAAC,GAUX,OANAG,EAAoBN,GAAUI,EAAQA,EAAOD,QAASJ,GAGtDK,EAAOC,QAAS,EAGTD,EAAOD,OACf,CAGAJ,EAAoBQ,EAAID,EAGxBP,EAAoBS,EAAI,KAGvB,IAAIC,EAAsBV,EAAoBW,OAAER,EAAW,CAAC,MAAM,IAAOH,EAAoB,QAE7F,OADsBA,EAAoBW,EAAED,EAClB,ENpCvB1M,EAAkC,mBAAX4M,OAAwBA,OAAO,kBAAoB,qBAC1E3M,EAAmC,mBAAX2M,OAAwBA,OAAO,mBAAqB,sBAC5E1M,EAAiC,mBAAX0M,OAAwBA,OAAO,iBAAmB,oBACxEzM,EAAgB0M,IAChBA,GAASA,EAAMC,EAAI,IACrBD,EAAMC,EAAI,EACVD,EAAMzI,SAAS2I,GAAQA,EAAGC,MAC1BH,EAAMzI,SAAS2I,GAAQA,EAAGC,IAAMD,EAAGC,IAAMD,MAC1C,EAyBDf,EAAoBiB,EAAI,CAACZ,EAAQxH,EAAMqI,KACtC,IAAIL,EACJK,KAAcL,EAAQ,IAAIC,GAAK,GAC/B,IAEIK,EACAC,EACAC,EAJAC,EAAY,IAAIC,IAChBnB,EAAUC,EAAOD,QAIjBoB,EAAU,IAAI3B,SAAQ,CAACzJ,EAASqL,KACnCJ,EAASI,EACTL,EAAehL,CAAO,IAEvBoL,EAAQvN,GAAkBmM,EAC1BoB,EAAQxN,GAAkB+M,IAAQF,GAASE,EAAGF,GAAQS,EAAUlJ,QAAQ2I,GAAKS,EAAe,OAAEf,SAC9FJ,EAAOD,QAAUoB,EACjB3I,GAAM6I,IAEL,IAAIX,EADJI,EAvCa,CAACO,GAAUA,EAAK9J,KAAK+J,IACnC,GAAW,OAARA,GAA+B,iBAARA,EAAkB,CAC3C,GAAGA,EAAI3N,GAAgB,OAAO2N,EAC9B,GAAGA,EAAIC,KAAM,CACZ,IAAIf,EAAQ,GACZA,EAAMC,EAAI,EACVa,EAAIC,MAAMZ,IACTa,EAAI5N,GAAkB+M,EACtB7M,EAAa0M,EAAM,IAChB1J,IACH0K,EAAI3N,GAAgBiD,EACpBhD,EAAa0M,EAAM,IAEpB,IAAIgB,EAAM,CAAC,EAEX,OADAA,EAAI7N,GAAkB+M,GAAQA,EAAGF,GAC1BgB,CACR,CACD,CACA,IAAIC,EAAM,CAAC,EAGX,OAFAA,EAAI9N,GAAiByM,MACrBqB,EAAI7N,GAAkB0N,EACfG,CAAG,IAkBKC,CAASL,GAEvB,IAAIM,EAAY,IAAOb,EAAYvJ,KAAKkJ,IACvC,GAAGA,EAAE5M,GAAe,MAAM4M,EAAE5M,GAC5B,OAAO4M,EAAE7M,EAAe,IAErBuN,EAAU,IAAI3B,SAASzJ,KAC1B2K,EAAK,IAAO3K,EAAQ4L,IACjBhB,EAAI,EACP,IAAIiB,EAAWC,GAAOA,IAAMrB,IAAUS,EAAUa,IAAID,KAAOZ,EAAUc,IAAIF,GAAIA,IAAMA,EAAEpB,IAAMC,EAAGC,IAAKkB,EAAEzF,KAAKsE,KAC1GI,EAAYvJ,KAAK+J,GAASA,EAAI3N,GAAeiO,IAAU,IAExD,OAAOlB,EAAGC,EAAIQ,EAAUQ,GAAW,IAChCK,IAAUA,EAAMhB,EAAOG,EAAQtN,GAAgBmO,GAAOjB,EAAahB,GAAWjM,EAAa0M,MAC/FA,GAASA,EAAMC,EAAI,IAAMD,EAAMC,EAAI,EAAE,EC/DlC1M,EAAW,GACf4L,EAAoBW,EAAI,CAAC1C,EAAQqE,EAAUvB,EAAIwB,KAC9C,IAAGD,EAAH,CAMA,IAAIE,EAAeC,IACnB,IAASC,EAAI,EAAGA,EAAItO,EAASiH,OAAQqH,IAAK,CAGzC,IAFA,IAAKJ,EAAUvB,EAAIwB,GAAYnO,EAASsO,GACpCC,GAAY,EACPC,EAAI,EAAGA,EAAIN,EAASjH,OAAQuH,MACpB,EAAXL,GAAsBC,GAAgBD,IAAa/H,OAAOqI,KAAK7C,EAAoBW,GAAGmC,OAAOzN,GAAS2K,EAAoBW,EAAEtL,GAAKiN,EAASM,MAC9IN,EAASS,OAAOH,IAAK,IAErBD,GAAY,EACTJ,EAAWC,IAAcA,EAAeD,IAG7C,GAAGI,EAAW,CACbvO,EAAS2O,OAAOL,IAAK,GACrB,IAAI1B,EAAID,SACEZ,IAANa,IAAiB/C,EAAS+C,EAC/B,CACD,CACA,OAAO/C,CAnBP,CAJCsE,EAAWA,GAAY,EACvB,IAAI,IAAIG,EAAItO,EAASiH,OAAQqH,EAAI,GAAKtO,EAASsO,EAAI,GAAG,GAAKH,EAAUG,IAAKtO,EAASsO,GAAKtO,EAASsO,EAAI,GACrGtO,EAASsO,GAAK,CAACJ,EAAUvB,EAAIwB,EAqBjB,EMzBdvC,EAAoBgD,EAAK3C,IACxB,IAAI4C,EAAS5C,GAAUA,EAAO6C,WAC7B,IAAO7C,EAAiB,QACxB,IAAM,EAEP,OADAL,EAAoBc,EAAEmC,EAAQ,CAAEhC,EAAGgC,IAC5BA,CAAM,ECLdjD,EAAoBc,EAAI,CAACV,EAAS+C,KACjC,IAAI,IAAI9N,KAAO8N,EACXnD,EAAoBoD,EAAED,EAAY9N,KAAS2K,EAAoBoD,EAAEhD,EAAS/K,IAC5EmF,OAAO6I,eAAejD,EAAS/K,EAAK,CAAEiO,YAAY,EAAMC,IAAKJ,EAAW9N,IAE1E,ECND2K,EAAoBwD,EAAI,CAAC,EAGzBxD,EAAoB7I,EAAKsM,GACjB5D,QAAQ6D,IAAIlJ,OAAOqI,KAAK7C,EAAoBwD,GAAG9I,QAAO,CAACiJ,EAAUtO,KACvE2K,EAAoBwD,EAAEnO,GAAKoO,EAASE,GAC7BA,IACL,KCNJ3D,EAAoB4D,EAAKH,GAEZA,EAAU,aCFvBzD,EAAoB6D,SAAYJ,IAEf,ECHjBzD,EAAoB8D,EAAI,WACvB,GAA0B,iBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOnN,MAAQ,IAAIoN,SAAS,cAAb,EAChB,CAAE,MAAO7M,GACR,GAAsB,iBAAX8M,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCAxBjE,EAAoBkE,IAAO7D,KAC1BA,EAAS7F,OAAO2J,OAAO9D,IACX+D,WAAU/D,EAAO+D,SAAW,IACxC5J,OAAO6I,eAAehD,EAAQ,UAAW,CACxCiD,YAAY,EACZe,IAAK,KACJ,MAAM,IAAIjN,MAAM,0FAA4FiJ,EAAOzL,GAAG,IAGjHyL,GCTRL,EAAoBoD,EAAI,CAACvB,EAAKyC,IAAU9J,OAAO+J,UAAUC,eAAe5E,KAAKiC,EAAKyC,GCClFtE,EAAoBgB,EAAKZ,IACH,oBAAXQ,QAA0BA,OAAO6D,aAC1CjK,OAAO6I,eAAejD,EAASQ,OAAO6D,YAAa,CAAE7J,MAAO,WAE7DJ,OAAO6I,eAAejD,EAAS,aAAc,CAAExF,OAAO,GAAO,ECL9DoF,EAAoB0E,EAAI,CAACtE,EAASuE,EAAcC,EAAgBC,KAC/D,IAAIC,EAAMrL,MAAMuG,EAAoB+E,EAAI,GAAKH,EAAiB,gBAC9D,MAAgD,mBAArCI,YAAYC,qBACfD,YAAYC,qBAAqBH,EAAKD,GAC3CjD,MAAMsD,GAAS1K,OAAO2K,OAAO/E,EAAS8E,EAAIE,SAAShF,WAE/C0E,EACLlD,MAAMnB,GAAOA,EAAE4E,gBACfzD,MAAM0D,GAAWN,YAAYO,YAAYD,EAAOT,KAChDjD,MAAMsD,GAAS1K,OAAO2K,OAAO/E,EAAS8E,EAAIE,SAAShF,UAAU,E,MCThE,IAAIoF,EACAxF,EAAoB8D,EAAE2B,gBAAeD,EAAYxF,EAAoB8D,EAAE4B,SAAW,IACtF,IAAIC,EAAW3F,EAAoB8D,EAAE6B,SACrC,IAAKH,GAAaG,IACbA,EAASC,gBACZJ,EAAYG,EAASC,cAAcC,MAC/BL,GAAW,CACf,IAAIM,EAAUH,EAASI,qBAAqB,UAC5C,GAAGD,EAAQzK,OAEV,IADA,IAAIqH,EAAIoD,EAAQzK,OAAS,EAClBqH,GAAK,IAAM8C,GAAWA,EAAYM,EAAQpD,KAAKmD,GAExD,CAID,IAAKL,EAAW,MAAM,IAAIpO,MAAM,yDAChCoO,EAAYA,EAAUtK,QAAQ,OAAQ,IAAIA,QAAQ,QAAS,IAAIA,QAAQ,YAAa,KACpF8E,EAAoB+E,EAAIS,C,WCdxB,IAAIQ,EAAkB,CACrB,IAAK,GAgBNhG,EAAoBwD,EAAEd,EAAI,CAACe,EAASE,KAE/BqC,EAAgBvC,IAElBgC,cAAczF,EAAoB+E,EAAI/E,EAAoB4D,EAAEH,GAE9D,EAGD,IAAIwC,EAAqBjJ,KAA+B,yBAAIA,KAA+B,0BAAK,GAC5FkJ,EAA6BD,EAAmBxJ,KAAK0J,KAAKF,GAC9DA,EAAmBxJ,KAvBCgC,IACnB,IAAK6D,EAAU8D,EAAaC,GAAW5H,EACvC,IAAI,IAAIwB,KAAYmG,EAChBpG,EAAoBoD,EAAEgD,EAAanG,KACrCD,EAAoBQ,EAAEP,GAAYmG,EAAYnG,IAIhD,IADGoG,GAASA,EAAQrG,GACdsC,EAASjH,QACd2K,EAAgB1D,EAASgE,OAAS,EACnCJ,EAA2BzH,EAAK,C,KhBnB7BpK,EAAO2L,EAAoBS,EAC/BT,EAAoBS,EAAI,IAChBT,EAAoB7I,EAAE,KAAKyK,KAAKvN,GiBDd2L,EAAoBS,G","sources":["webpack://didcomm-demo/webpack/runtime/async module","webpack://didcomm-demo/webpack/runtime/chunk loaded","webpack://didcomm-demo/webpack/runtime/startup chunk dependencies","webpack://didcomm-demo/./src/lib/didcomm.ts","webpack://didcomm-demo/./src/lib/peer2.ts","webpack://didcomm-demo/./src/lib/worker.ts","webpack://didcomm-demo/webpack/bootstrap","webpack://didcomm-demo/webpack/runtime/compat get default export","webpack://didcomm-demo/webpack/runtime/define property getters","webpack://didcomm-demo/webpack/runtime/ensure chunk","webpack://didcomm-demo/webpack/runtime/get javascript chunk filename","webpack://didcomm-demo/webpack/runtime/get mini-css chunk filename","webpack://didcomm-demo/webpack/runtime/global","webpack://didcomm-demo/webpack/runtime/harmony module decorator","webpack://didcomm-demo/webpack/runtime/hasOwnProperty shorthand","webpack://didcomm-demo/webpack/runtime/make namespace object","webpack://didcomm-demo/webpack/runtime/wasm loading","webpack://didcomm-demo/webpack/runtime/publicPath","webpack://didcomm-demo/webpack/runtime/importScripts chunk loading","webpack://didcomm-demo/webpack/startup"],"sourcesContent":["var webpackQueues = typeof Symbol === \"function\" ? Symbol(\"webpack queues\") : \"__webpack_queues__\";\nvar webpackExports = typeof Symbol === \"function\" ? Symbol(\"webpack exports\") : \"__webpack_exports__\";\nvar webpackError = typeof Symbol === \"function\" ? Symbol(\"webpack error\") : \"__webpack_error__\";\nvar resolveQueue = (queue) => {\n\tif(queue && queue.d < 1) {\n\t\tqueue.d = 1;\n\t\tqueue.forEach((fn) => (fn.r--));\n\t\tqueue.forEach((fn) => (fn.r-- ? fn.r++ : fn()));\n\t}\n}\nvar wrapDeps = (deps) => (deps.map((dep) => {\n\tif(dep !== null && typeof dep === \"object\") {\n\t\tif(dep[webpackQueues]) return dep;\n\t\tif(dep.then) {\n\t\t\tvar queue = [];\n\t\t\tqueue.d = 0;\n\t\t\tdep.then((r) => {\n\t\t\t\tobj[webpackExports] = r;\n\t\t\t\tresolveQueue(queue);\n\t\t\t}, (e) => {\n\t\t\t\tobj[webpackError] = e;\n\t\t\t\tresolveQueue(queue);\n\t\t\t});\n\t\t\tvar obj = {};\n\t\t\tobj[webpackQueues] = (fn) => (fn(queue));\n\t\t\treturn obj;\n\t\t}\n\t}\n\tvar ret = {};\n\tret[webpackQueues] = x => {};\n\tret[webpackExports] = dep;\n\treturn ret;\n}));\n__webpack_require__.a = (module, body, hasAwait) => {\n\tvar queue;\n\thasAwait && ((queue = []).d = -1);\n\tvar depQueues = new Set();\n\tvar exports = module.exports;\n\tvar currentDeps;\n\tvar outerResolve;\n\tvar reject;\n\tvar promise = new Promise((resolve, rej) => {\n\t\treject = rej;\n\t\touterResolve = resolve;\n\t});\n\tpromise[webpackExports] = exports;\n\tpromise[webpackQueues] = (fn) => (queue && fn(queue), depQueues.forEach(fn), promise[\"catch\"](x => {}));\n\tmodule.exports = promise;\n\tbody((deps) => {\n\t\tcurrentDeps = wrapDeps(deps);\n\t\tvar fn;\n\t\tvar getResult = () => (currentDeps.map((d) => {\n\t\t\tif(d[webpackError]) throw d[webpackError];\n\t\t\treturn d[webpackExports];\n\t\t}))\n\t\tvar promise = new Promise((resolve) => {\n\t\t\tfn = () => (resolve(getResult));\n\t\t\tfn.r = 0;\n\t\t\tvar fnQueue = (q) => (q !== queue && !depQueues.has(q) && (depQueues.add(q), q && !q.d && (fn.r++, q.push(fn))));\n\t\t\tcurrentDeps.map((dep) => (dep[webpackQueues](fnQueue)));\n\t\t});\n\t\treturn fn.r ? promise : getResult();\n\t}, (err) => ((err ? reject(promise[webpackError] = err) : outerResolve(exports)), resolveQueue(queue)));\n\tqueue && queue.d < 0 && (queue.d = 0);\n};","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn __webpack_require__.e(907).then(next);\n};","import {\n  ed25519,\n  edwardsToMontgomeryPub,\n  edwardsToMontgomeryPriv,\n} from \"@noble/curves/ed25519\"\nimport { DIDResolver, DIDDoc, SecretsResolver, Secret, Message, UnpackMetadata } from \"didcomm\"\nimport DIDPeer from \"./peer2\"\nimport {v4 as uuidv4} from \"uuid\"\nimport { EventBus } from \"./eventbus\"\n\nfunction x25519ToSecret(\n  did: string,\n  x25519KeyPriv: Uint8Array,\n  x25519Key: Uint8Array\n): Secret {\n  const encIdent = DIDPeer.keyToIdent(x25519Key, \"x25519-pub\")\n  const secretEnc: Secret = {\n    id: `${did}#${encIdent}`,\n    type: \"X25519KeyAgreementKey2020\",\n    privateKeyMultibase: DIDPeer.keyToMultibase(x25519KeyPriv, \"x25519-priv\")\n  }\n  return secretEnc\n}\n\nfunction ed25519ToSecret(\n  did: string,\n  ed25519KeyPriv: Uint8Array,\n  ed25519Key: Uint8Array\n): Secret {\n  const verIdent = DIDPeer.keyToIdent(ed25519Key, \"ed25519-pub\")\n  const secretVer: Secret = {\n    id: `${did}#${verIdent}`,\n    type: \"Ed25519VerificationKey2020\",\n    privateKeyMultibase: DIDPeer.keyToMultibase(ed25519KeyPriv, \"ed25519-priv\")\n  }\n  return secretVer\n}\n\nexport function generateDidForMediator() {\n  const key = ed25519.utils.randomPrivateKey()\n  const enckeyPriv = edwardsToMontgomeryPriv(key)\n  const verkey = ed25519.getPublicKey(key)\n  const enckey = edwardsToMontgomeryPub(verkey)\n  const service = {\n    id: \"#didcomm\",\n    type: \"DIDCommMessaging\",\n    serviceEndpoint: \"didcomm:/transport/queue\",\n    accept: [\"didcomm/v2\"],\n  }\n  const did = DIDPeer.generate([verkey], [enckey], service)\n\n  const secretVer = ed25519ToSecret(did, key, verkey)\n  const secretEnc = x25519ToSecret(did, enckeyPriv, enckey)\n  return { did, secrets: [secretVer, secretEnc] }\n}\n\nexport function generateDid(routingDid: string) {\n  const key = ed25519.utils.randomPrivateKey()\n  const enckeyPriv = edwardsToMontgomeryPriv(key)\n  const verkey = ed25519.getPublicKey(key)\n  const enckey = edwardsToMontgomeryPub(verkey)\n  const service = {\n    id: \"#didcomm\",\n    type: \"DIDCommMessaging\",\n    serviceEndpoint: {\n      uri: routingDid,\n      accept: [\"didcomm/v2\"],\n    },\n  }\n  const did = DIDPeer.generate([verkey], [enckey], service)\n\n  const secretVer = ed25519ToSecret(did, key, verkey)\n  const secretEnc = x25519ToSecret(did, enckeyPriv, enckey)\n  return { did, secrets: [secretVer, secretEnc] }\n}\n\nexport class DIDPeerResolver implements DIDResolver {\n  async resolve(did: string): Promise<DIDDoc | null> {\n    const raw_doc = DIDPeer.resolve(did)\n    return {\n      id: raw_doc.id,\n      verificationMethod: raw_doc.verificationMethod,\n      authentication: raw_doc.authentication,\n      keyAgreement: raw_doc.keyAgreement,\n      service: raw_doc.service,\n    }\n  }\n}\n\nexport interface SecretsManager extends SecretsResolver {\n  store_secret: (secret: Secret) => void\n}\n\nexport class LocalSecretsResolver implements SecretsManager {\n  private readonly storageKey = \"secretsResolver\"\n\n  constructor() {\n    // Initialize local storage if it hasn't been done before\n    if (!localStorage.getItem(this.storageKey)) {\n      localStorage.setItem(this.storageKey, JSON.stringify({}))\n    }\n  }\n\n  private static createError(message: string, name: string): Error {\n    const e = new Error(message)\n    e.name = name\n    return e\n  }\n\n  async get_secret(secret_id: string): Promise<Secret | null> {\n    try {\n      const secrets = JSON.parse(localStorage.getItem(this.storageKey) || \"{}\")\n      return secrets[secret_id] || null\n    } catch (error) {\n      throw LocalSecretsResolver.createError(\n        \"Unable to perform IO operation\",\n        \"DIDCommIoError\"\n      )\n    }\n  }\n\n  async find_secrets(secret_ids: Array<string>): Promise<Array<string>> {\n    try {\n      const secrets = JSON.parse(localStorage.getItem(this.storageKey) || \"{}\")\n      return secret_ids.map(id => secrets[id]).filter(secret => !!secret) // Filter out undefined or null values\n    } catch (error) {\n      throw LocalSecretsResolver.createError(\n        \"Unable to perform IO operation\",\n        \"DIDCommIoError\"\n      )\n    }\n  }\n\n  // Helper method to store a secret in localStorage\n  store_secret(secret: Secret): void {\n    try {\n      const secrets = JSON.parse(localStorage.getItem(this.storageKey) || \"{}\")\n      secrets[secret.id] = secret\n      localStorage.setItem(this.storageKey, JSON.stringify(secrets))\n    } catch (error) {\n      throw LocalSecretsResolver.createError(\n        \"Unable to perform IO operation\",\n        \"DIDCommIoError\"\n      )\n    }\n  }\n}\n\nexport class EphemeralSecretsResolver implements SecretsManager {\n  private secrets: Record<string, Secret> = {};\n\n  private static createError(message: string, name: string): Error {\n    const e = new Error(message);\n    e.name = name;\n    return e;\n  }\n\n  async get_secret(secret_id: string): Promise<Secret | null> {\n    try {\n      return this.secrets[secret_id] || null;\n    } catch (error) {\n      throw EphemeralSecretsResolver.createError(\n        \"Unable to fetch secret from memory\",\n        \"DIDCommMemoryError\"\n      );\n    }\n  }\n\n  async find_secrets(secret_ids: Array<string>): Promise<Array<string>> {\n    try {\n      return secret_ids.map(id => this.secrets[id]).filter(secret => !!secret).map(secret => secret.id); // Filter out undefined or null values\n    } catch (error) {\n      throw EphemeralSecretsResolver.createError(\n        \"Unable to fetch secrets from memory\",\n        \"DIDCommMemoryError\"\n      );\n    }\n  }\n\n  // Helper method to store a secret in memory\n  store_secret(secret: Secret): void {\n    try {\n      this.secrets[secret.id] = secret;\n    } catch (error) {\n      throw EphemeralSecretsResolver.createError(\n        \"Unable to store secret in memory\",\n        \"DIDCommMemoryError\"\n      );\n    }\n  }\n}\n\nexport interface DIDCommMessage {\n  type: string\n  body?: any\n  [key: string]: any\n}\n\nexport class DIDComm {\n  private readonly resolver: DIDPeerResolver\n  private readonly secretsResolver: SecretsManager\n\n  constructor() {\n    this.resolver = new DIDPeerResolver()\n    this.secretsResolver = new EphemeralSecretsResolver()\n  }\n\n  async generateDidForMediator(): Promise<string> {\n    const { did, secrets } = generateDidForMediator()\n    secrets.forEach(secret => this.secretsResolver.store_secret(secret))\n    return did\n  }\n\n  async generateDid(routingDid: string): Promise<string> {\n    const { did, secrets } = generateDid(routingDid)\n    secrets.forEach(secret => this.secretsResolver.store_secret(secret))\n    return did\n  }\n\n  async resolve(did: string): Promise<DIDDoc | null> {\n    return await this.resolver.resolve(did)\n  }\n\n  /**\n   * Obtain the first websocket endpoint for a given DID.\n   *\n   * @param {string} did The DID to obtain the websocket endpoint for\n   */\n  async wsEndpoint(did: string): Promise<string> {\n    const doc = await this.resolve(did)\n    if (!doc) {\n      throw new Error(\"Unable to resolve DID\")\n    }\n    if (!doc.service) {\n      throw new Error(\"No service found\")\n    }\n    \n    const services = doc.service\n      .filter(s => s.type === \"DIDCommMessaging\")\n      .filter(s => s.serviceEndpoint.startsWith(\"ws\"))\n    return services[0].serviceEndpoint\n  }\n\n  async prepareMessage(to: string, from: string, message: DIDCommMessage) {\n    const msg = new Message({\n      id: uuidv4(),\n      typ: \"application/didcomm-plain+json\",\n      from: from,\n      to: [to],\n      body: message.body || {},\n      created_time: Date.now(),\n      ...message,\n    })\n    return await msg.pack_encrypted(\n      to, from, null, this.resolver, this.secretsResolver, {forward: true}\n    )\n  }\n\n  async unpackMessage(message: string): Promise<[Message, UnpackMetadata]> {\n      return await Message.unpack(\n        message, this.resolver, this.secretsResolver, {}\n      )\n  }\n\n  async sendMessageAndExpectReply(to: string, from: string, message: DIDCommMessage): Promise<[Message, UnpackMetadata]> {\n    const [packed, meta]= await this.prepareMessage(to, from, message)\n    if (!meta.messaging_service) {\n      throw new Error(\"No messaging service found\")\n    }\n\n    try {\n      const response = await fetch(meta.messaging_service.service_endpoint, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/didcomm-encrypted+json\"\n        },\n        body: packed,\n      })\n\n      if (!response.ok) {\n        const text = await response.text()\n        throw new Error(`Error sending message: ${text}`)\n      }\n\n      const packedResponse = await response.text()\n      return await this.unpackMessage(packedResponse)\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  async sendMessage(to: string, from: string, message: DIDCommMessage) {\n    const [packed, meta]= await this.prepareMessage(to, from, message)\n    if (!meta.messaging_service) {\n      throw new Error(\"No messaging service found\")\n    }\n\n    try {\n      const response = await fetch(meta.messaging_service.service_endpoint, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/didcomm-encrypted+json\"\n        },\n        body: packed,\n      })\n\n      if (!response.ok) {\n        const text = await response.text()\n        throw new Error(`Error sending message: ${text}`)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  async receiveMessage(message: string): Promise<[Message, UnpackMetadata]> {\n      return await Message.unpack(\n        message, this.resolver, this.secretsResolver, {}\n      )\n  }\n}\n","import * as multibase from \"multibase\"\nimport * as multicodec from \"multicodec\"\n\n// Common string abbreviation mappings\nconst commonStringAbbreviations: Record<string, string> = {\n  type: \"t\",\n  DIDCommMessaging: \"dm\",\n  serviceEndpoint: \"s\",\n  routingKeys: \"r\",\n  accept: \"a\",\n}\n\nconst reverseCommonStringAbbreviations: Record<string, string> = Object.entries(\n  commonStringAbbreviations\n).reduce((acc, [key, value]) => ({ ...acc, [value]: key }), {})\n\n// Purpose code mappings\nconst purposeCodeList: Record<string, string> = {\n  Assertion: \"A\",\n  Encryption: \"E\",\n  Verification: \"V\",\n  \"Capability Invocation\": \"I\",\n  \"Capability Delegation\": \"D\",\n  Service: \"S\",\n}\n\nexport default class DIDPeer {\n  static keyToMultibase(key: Uint8Array, prefix: multicodec.CodecName): string {\n    return multibase\n      .encode(\"base58btc\", multicodec.addPrefix(prefix, key))\n      .toString()\n  }\n\n  static base64UrlEncode(input: string): string {\n    let base64 = btoa(input)\n    return base64.replace(\"+\", \"-\").replace(\"/\", \"_\").replace(/=+$/, \"\") // remove trailing '=' characters\n  }\n\n  static base64UrlDecode(input: string): string {\n    // Replace URL-safe characters back to Base64 characters\n    let base64 = input.replace(\"-\", \"+\").replace(\"_\", \"/\")\n\n    // Add padding if necessary\n    switch (base64.length % 4) {\n      case 2:\n        base64 += \"==\"\n        break // 2 padding chars\n      case 3:\n        base64 += \"=\"\n        break // 1 padding char\n    }\n\n    return atob(base64)\n  }\n\n  // Determine ident for key\n  static keyToIdent(key: Uint8Array, prefix: multicodec.CodecName): string {\n    const encoded = DIDPeer.keyToMultibase(key, prefix)\n    return encoded.toString().slice(1, 9)\n  }\n\n  // Generate a DID\n  static generate(\n    signingKeys: Uint8Array[],\n    encryptionKeys: Uint8Array[],\n    serviceBlock: object\n  ): string {\n    const didPrefix = \"did:peer:2\"\n\n    // Encode keys\n    const encodedSigningKeys = signingKeys.map(key => {\n      const encoded = multibase.encode(\n        \"base58btc\",\n        multicodec.addPrefix(\"ed25519-pub\", key)\n      )\n      return \".\" + purposeCodeList[\"Verification\"] + encoded.toString()\n    })\n\n    const encodedEncryptionKeys = encryptionKeys.map(key => {\n      const encoded = multibase.encode(\n        \"base58btc\",\n        multicodec.addPrefix(\"x25519-pub\", key)\n      )\n      return \".\" + purposeCodeList[\"Encryption\"] + encoded.toString()\n    })\n\n    // Encode service block\n    let abbreviatedService = JSON.stringify(serviceBlock, (key, value) => {\n      if (commonStringAbbreviations[key]) {\n        return commonStringAbbreviations[key]\n      }\n      return value\n    })\n    abbreviatedService = abbreviatedService.replace(/\\s+/g, \"\")\n    const encodedService = DIDPeer.base64UrlEncode(abbreviatedService)\n    const finalService = \".\" + purposeCodeList[\"Service\"] + encodedService\n\n    return (\n      didPrefix +\n      encodedSigningKeys.join(\"\") +\n      encodedEncryptionKeys.join(\"\") +\n      finalService\n    )\n  }\n\n  // Resolve a DID into a DID Document\n  static resolve(did: string) {\n    if (!did.startsWith(\"did:peer:2\")) {\n      throw new Error(\"Invalid did:peer:2\")\n    }\n\n    const [, ...elements] = did.split(\".\")\n\n    const doc: any = {\n      \"@context\": \"https://www.w3.org/ns/did/v1\",\n    }\n\n    elements.forEach(element => {\n      const purposeCode = element.charAt(0)\n      const encodedValue = element.slice(1)\n\n      switch (purposeCode) {\n        case purposeCodeList[\"Verification\"]: {\n          const decodedSigningKey = multicodec.rmPrefix(\n            multibase.decode(encodedValue)\n          )\n          if (!doc.authentication) {\n            doc.authentication = []\n          }\n          if (!doc.verificationMethod) {\n            doc.verificationMethod = []\n          }\n          let ident = `#${DIDPeer.keyToIdent(decodedSigningKey, \"ed25519-pub\")}`\n          doc.verificationMethod.push({\n            id: ident,\n            type: \"Ed25519VerificationKey2018\",\n            publicKeyMultibase: DIDPeer.keyToMultibase(\n              decodedSigningKey,\n              \"ed25519-pub\"\n            ),\n          })\n          doc.authentication.push(ident)\n          break\n        }\n\n        case purposeCodeList[\"Encryption\"]: {\n          const decodedEncryptionKey = multicodec.rmPrefix(\n            multibase.decode(encodedValue)\n          )\n          if (!doc.keyAgreement) {\n            doc.keyAgreement = []\n          }\n          if (!doc.verificationMethod) {\n            doc.verificationMethod = []\n          }\n          let ident = `#${DIDPeer.keyToIdent(\n            decodedEncryptionKey,\n            \"x25519-pub\"\n          )}`\n          doc.keyAgreement.push({\n            id: ident,\n            type: \"X25519KeyAgreementKey2019\",\n            publicKeyBase58: DIDPeer.keyToMultibase(\n              decodedEncryptionKey,\n              \"x25519-pub\"\n            ),\n          })\n          doc.keyAgreement.push(ident)\n          break\n        }\n\n        case purposeCodeList[\"Service\"]: {\n          const decodedService = DIDPeer.base64UrlDecode(encodedValue)\n          const parsedService = JSON.parse(decodedService, (key, value) => {\n            if (reverseCommonStringAbbreviations[key]) {\n              return reverseCommonStringAbbreviations[key]\n            }\n            return value\n          })\n          doc.service = [parsedService]\n          break\n        }\n\n        default:\n          // Other purpose codes can be handled here\n          break\n      }\n    })\n\n    return doc\n  }\n}\n","import {DIDComm, DIDCommMessage} from './didcomm'\nimport {IMessage} from \"didcomm\"\nimport { WorkerCommand, WorkerMessage } from './workerTypes'\n\nconst ctx: Worker = self as any;\n\nclass DIDCommWorker {\n  private didcomm: DIDComm\n  private didForMediator: string\n  private did: string\n  private ws: WebSocket\n\n  init() {\n    this.didcomm = new DIDComm()\n  }\n\n  async establishMediation({mediatorDid}: {mediatorDid: string}) {\n    this.didForMediator = await this.didcomm.generateDidForMediator()\n    {\n      const [msg, meta] = await this.didcomm.sendMessageAndExpectReply(\n        mediatorDid,\n        this.didForMediator,\n        {\n          type: \"https://didcomm.org/coordinate-mediation/3.0/mediate-request\"\n        }\n      )\n      const reply = msg.as_value()\n      if (reply.type !== 'https://didcomm.org/coordinate-mediation/3.0/mediate-grant') {\n        console.error(\"Unexpected reply: \", reply)\n        throw new Error(\"Unexpected reply\")\n      }\n      const routingDid = reply.body.routing_did[0]\n      this.did = await this.didcomm.generateDid(routingDid)\n      this.postMessage({type: \"didGenerated\", payload: this.did})\n    }\n\n    const [msg, meta] = await this.didcomm.sendMessageAndExpectReply(\n      mediatorDid,\n      this.didForMediator,\n      {\n        type: \"https://didcomm.org/coordinate-mediation/3.0/recipient-update\",\n        body: {\n          updates: [\n            {\n              recipient_did: this.did,\n              action: \"add\",\n            }\n          ]\n        }\n      }\n    )\n\n    const reply = msg.as_value()\n    if (reply.type !== 'https://didcomm.org/coordinate-mediation/3.0/recipient-update-response') {\n      console.error(\"Unexpected reply: \", reply)\n      throw new Error(\"Unexpected reply\")\n    }\n\n    if (reply.body.updated[0]?.recipient_did !== this.did) {\n      throw new Error(\"Unexpected did in recipient update response\")\n    }\n\n    if (reply.body.updated[0]?.action !== \"add\") {\n      throw new Error(\"Unexpected action in recipient update response\")\n    }\n\n    if (reply.body.updated[0]?.result !== \"success\") {\n      throw new Error(\"Unexpected status in recipient update response\")\n    }\n  }\n\n  async connect({mediatorDid}: {mediatorDid: string}) {\n    const endpoint = await this.didcomm.wsEndpoint(mediatorDid)\n    this.ws = new WebSocket(endpoint)\n\n    this.ws.onmessage = async (event) => {\n      await this.handlePackedMessage(event.data)\n    }\n    this.ws.onopen = (event) => {\n      this.postMessage({type: \"connected\", payload: event})\n    }\n    this.ws.onerror = (event) => {\n      this.postMessage({type: \"error\", payload: event})\n    }\n    this.ws.onclose = (event) => {\n      this.postMessage({type: \"disconnected\", payload: event})\n    }\n\n    const [live, meta] = await this.didcomm.prepareMessage(\n      mediatorDid, this.didForMediator, {\n      type: \"https://didcomm.org/messagepickup/3.0/live-delivery-change\",\n      body: {\n        live_delivery: true\n      }\n    })\n    this.ws.send(live)\n  }\n\n  async handleMessage(message: IMessage) {\n    switch (message.type) {\n      case \"https://didcomm.org/messagepickup/3.0/status\":\n        if (message.body.message_count > 0) {\n          const [msg, meta] = await this.didcomm.sendMessageAndExpectReply(\n            message.from, this.didForMediator, {\n              type: \"https://didcomm.org/messagepickup/3.0/delivery-request\",\n              body: {\n                limit: message.body.message_count,\n              },\n              return_route: \"all\"\n            }\n          )\n          const delivery = msg.as_value()\n          if (delivery.type !== \"https://didcomm.org/messagepickup/3.0/delivery\") {\n            throw new Error(\"Unexpected reply: \" + delivery.type)\n          }\n          await this.handleMessage(delivery)\n        }\n        break\n\n      case \"https://didcomm.org/messagepickup/3.0/delivery\":\n        let received: string[] = []\n        message.attachments.forEach(async (attachement) => {\n          if (\"base64\" in attachement.data) {\n            received.push(attachement.id)\n            this.handlePackedMessage(atob(attachement.data.base64))\n          } else {\n            console.error(\"Unhandled attachment: \", attachement)\n          }\n        })\n        const [msg, meta] = await this.didcomm.sendMessageAndExpectReply(\n          message.from, this.didForMediator, {\n            type: \"https://didcomm.org/messagepickup/3.0/messages-received\",\n            body: {\n              message_id_list: received,\n            },\n            return_route: \"all\"\n          }\n        )\n        const status = msg.as_value()\n        if (status.type !== \"https://didcomm.org/messagepickup/3.0/status\") {\n          throw new Error(\"Unexpected reply: \" + status.type)\n        }\n        await this.handleMessage(status)\n        break\n      default:\n        console.log(\"Unhandled message: \", message)\n        break\n    }\n    this.postMessage({type: \"messageReceived\", payload: message})\n  }\n\n  async handlePackedMessage(packed: string) {\n    const [msg, meta] = await this.didcomm.unpackMessage(packed)\n    const message = msg.as_value()\n    return await this.handleMessage(message)\n  }\n\n  async disconnect() {\n    this.ws.close()\n    this.postMessage({type: \"disconnected\", payload: {}})\n  }\n\n  async sendMessage({to, message}: {to: string, message: DIDCommMessage}) {\n    await this.didcomm.sendMessage(to, this.did, message)\n  }\n\n  postMessage<T>(message: WorkerMessage<T>) {\n    self.postMessage(message)\n  }\n\n  async route(event: MessageEvent<WorkerCommand<any>>) {\n    const {type, payload} = event.data\n    const method = this[type]\n\n    if (typeof method === 'function') {\n      const result = method.call(this, payload)\n\n      if (result instanceof Promise) {\n        await result\n      }\n    } else {\n      console.error(\"Unknown command type: \", type)\n    }\n  }\n}\n\nconst handler = new DIDCommWorker()\nctx.addEventListener('message', async (event: MessageEvent) => {\n  await handler.route(event)\n})\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [907], () => (__webpack_require__(8336)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".bundle.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.v = (exports, wasmModuleId, wasmModuleHash, importsObj) => {\n\tvar req = fetch(__webpack_require__.p + \"\" + wasmModuleHash + \".module.wasm\");\n\tif (typeof WebAssembly.instantiateStreaming === 'function') {\n\t\treturn WebAssembly.instantiateStreaming(req, importsObj)\n\t\t\t.then((res) => (Object.assign(exports, res.instance.exports)));\n\t}\n\treturn req\n\t\t.then((x) => (x.arrayBuffer()))\n\t\t.then((bytes) => (WebAssembly.instantiate(bytes, importsObj)))\n\t\t.then((res) => (Object.assign(exports, res.instance.exports)));\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t336: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkdidcomm_demo\"] = self[\"webpackChunkdidcomm_demo\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["webpackQueues","webpackExports","webpackError","resolveQueue","deferred","next","x25519ToSecret","did","x25519KeyPriv","x25519Key","encIdent","keyToIdent","id","type","privateKeyMultibase","keyToMultibase","ed25519ToSecret","ed25519KeyPriv","ed25519Key","verIdent","generateDidForMediator","key","utils","randomPrivateKey","enckeyPriv","verkey","getPublicKey","enckey","generate","serviceEndpoint","accept","secrets","generateDid","routingDid","service","uri","resolve","raw_doc","verificationMethod","authentication","keyAgreement","storageKey","localStorage","getItem","this","setItem","JSON","stringify","createError","message","name","e","Error","get_secret","secret_id","parse","error","LocalSecretsResolver","find_secrets","secret_ids","map","filter","secret","store_secret","EphemeralSecretsResolver","resolver","DIDPeerResolver","secretsResolver","forEach","wsEndpoint","doc","s","startsWith","prepareMessage","to","from","typ","body","created_time","Date","now","pack_encrypted","forward","unpackMessage","unpack","sendMessageAndExpectReply","packed","meta","messaging_service","fetch","service_endpoint","method","headers","response","ok","text","packedResponse","console","sendMessage","receiveMessage","commonStringAbbreviations","DIDCommMessaging","routingKeys","reverseCommonStringAbbreviations","Object","entries","reduce","acc","value","prefix","toString","base64UrlEncode","input","btoa","replace","base64UrlDecode","base64","length","atob","DIDPeer","slice","signingKeys","encryptionKeys","serviceBlock","encodedSigningKeys","encodedEncryptionKeys","abbreviatedService","finalService","join","elements","split","element","purposeCode","charAt","encodedValue","decodedSigningKey","ident","push","publicKeyMultibase","decodedEncryptionKey","publicKeyBase58","decodedService","parsedService","ctx","self","handler","init","didcomm","establishMediation","mediatorDid","didForMediator","as_value","routing_did","postMessage","payload","updates","recipient_did","action","msg","reply","updated","result","connect","endpoint","ws","WebSocket","onmessage","event","handlePackedMessage","data","onopen","onerror","onclose","live_delivery","live","send","handleMessage","message_count","limit","return_route","delivery","attachments","attachement","message_id_list","log","disconnect","close","route","call","Promise","addEventListener","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","loaded","__webpack_modules__","m","x","__webpack_exports__","O","Symbol","queue","d","fn","r","a","hasAwait","currentDeps","outerResolve","reject","depQueues","Set","promise","rej","deps","dep","then","obj","ret","wrapDeps","getResult","fnQueue","q","has","add","err","chunkIds","priority","notFulfilled","Infinity","i","fulfilled","j","keys","every","splice","n","getter","__esModule","definition","o","defineProperty","enumerable","get","f","chunkId","all","promises","u","miniCssF","g","globalThis","Function","window","hmd","create","children","set","prop","prototype","hasOwnProperty","toStringTag","v","wasmModuleId","wasmModuleHash","importsObj","req","p","WebAssembly","instantiateStreaming","res","assign","instance","arrayBuffer","bytes","instantiate","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","installedChunks","chunkLoadingGlobal","parentChunkLoadingFunction","bind","moreModules","runtime","pop"],"sourceRoot":""}